manhattan (x_t: int) (y_t: int) : int {
    min: int = const 300;
    min_label: int = const 0;
    zero: int = const 0;
    x_0: int = const 32;
    y_0: int = const 99;
    l_0: int = const 1;
    x_1: int = const 44;
    y_1: int = const 56;
    l_1: int = const 1;
    x_2: int = const 53;
    y_2: int = const 20;
    l_2: int = const 1;
    x_3: int = const 85;
    y_3: int = const 31;
    l_3: int = const 1;
    x_4: int = const 71;
    y_4: int = const 46;
    l_4: int = const 0;
    x_5: int = const 18;
    y_5: int = const 74;
    l_5: int = const 0;
    x_6: int = const 39;
    y_6: int = const 47;
    l_6: int = const 0;
    x_7: int = const 98;
    y_7: int = const 37;
    l_7: int = const 1;
    x_8: int = const 20;
    y_8: int = const 52;
    l_8: int = const 1;
    x_9: int = const 30;
    y_9: int = const 44;
    l_9: int = const 0;
    x_10: int = const 94;
    y_10: int = const 13;
    l_10: int = const 0;
    x_11: int = const 27;
    y_11: int = const 84;
    l_11: int = const 0;
    x_12: int = const 42;
    y_12: int = const 41;
    l_12: int = const 0;
    x_13: int = const 44;
    y_13: int = const 41;
    l_13: int = const 0;
    x_14: int = const 38;
    y_14: int = const 99;
    l_14: int = const 1;
    x_15: int = const 78;
    y_15: int = const 11;
    l_15: int = const 0;
    x_16: int = const 84;
    y_16: int = const 6;
    l_16: int = const 0;
    x_17: int = const 41;
    y_17: int = const 86;
    l_17: int = const 0;
    x_18: int = const 35;
    y_18: int = const 86;
    l_18: int = const 1;
    x_19: int = const 7;
    y_19: int = const 64;
    l_19: int = const 1;
    x_20: int = const 67;
    y_20: int = const 18;
    l_20: int = const 1;
    x_21: int = const 59;
    y_21: int = const 95;
    l_21: int = const 0;
    x_22: int = const 72;
    y_22: int = const 23;
    l_22: int = const 0;
    x_23: int = const 28;
    y_23: int = const 75;
    l_23: int = const 1;
    x_24: int = const 6;
    y_24: int = const 68;
    l_24: int = const 1;
    x_25: int = const 100;
    y_25: int = const 60;
    l_25: int = const 0;
    x_26: int = const 51;
    y_26: int = const 74;
    l_26: int = const 1;
    x_27: int = const 61;
    y_27: int = const 7;
    l_27: int = const 0;
    x_28: int = const 72;
    y_28: int = const 15;
    l_28: int = const 1;
    x_29: int = const 83;
    y_29: int = const 99;
    l_29: int = const 1;
    x_30: int = const 10;
    y_30: int = const 98;
    l_30: int = const 1;
    x_31: int = const 34;
    y_31: int = const 34;
    l_31: int = const 0;
    x_32: int = const 100;
    y_32: int = const 1;
    l_32: int = const 0;
    x_33: int = const 45;
    y_33: int = const 99;
    l_33: int = const 0;
    x_34: int = const 98;
    y_34: int = const 64;
    l_34: int = const 1;
    x_35: int = const 36;
    y_35: int = const 18;
    l_35: int = const 1;
    x_36: int = const 37;
    y_36: int = const 65;
    l_36: int = const 1;
    x_37: int = const 86;
    y_37: int = const 54;
    l_37: int = const 1;
    x_38: int = const 8;
    y_38: int = const 26;
    l_38: int = const 0;
    x_39: int = const 33;
    y_39: int = const 74;
    l_39: int = const 0;
    x_40: int = const 40;
    y_40: int = const 93;
    l_40: int = const 0;
    x_41: int = const 20;
    y_41: int = const 54;
    l_41: int = const 0;
    x_42: int = const 97;
    y_42: int = const 26;
    l_42: int = const 1;
    x_43: int = const 76;
    y_43: int = const 14;
    l_43: int = const 1;
    x_44: int = const 72;
    y_44: int = const 7;
    l_44: int = const 1;
    x_45: int = const 7;
    y_45: int = const 51;
    l_45: int = const 0;
    x_46: int = const 53;
    y_46: int = const 30;
    l_46: int = const 0;
    x_47: int = const 83;
    y_47: int = const 25;
    l_47: int = const 0;
    x_48: int = const 26;
    y_48: int = const 76;
    l_48: int = const 1;
    x_49: int = const 47;
    y_49: int = const 54;
    l_49: int = const 1;
    x_50: int = const 79;
    y_50: int = const 12;
    l_50: int = const 0;
    x_51: int = const 54;
    y_51: int = const 31;
    l_51: int = const 1;
    x_52: int = const 55;
    y_52: int = const 43;
    l_52: int = const 0;
    x_53: int = const 28;
    y_53: int = const 100;
    l_53: int = const 0;
    x_54: int = const 48;
    y_54: int = const 15;
    l_54: int = const 1;
    x_55: int = const 34;
    y_55: int = const 74;
    l_55: int = const 0;
    x_56: int = const 27;
    y_56: int = const 97;
    l_56: int = const 1;
    x_57: int = const 50;
    y_57: int = const 47;
    l_57: int = const 0;
    x_58: int = const 23;
    y_58: int = const 59;
    l_58: int = const 1;
    x_59: int = const 99;
    y_59: int = const 58;
    l_59: int = const 0;
    x_60: int = const 41;
    y_60: int = const 72;
    l_60: int = const 0;
    x_61: int = const 69;
    y_61: int = const 0;
    l_61: int = const 1;
    x_62: int = const 65;
    y_62: int = const 91;
    l_62: int = const 1;
    x_63: int = const 37;
    y_63: int = const 73;
    l_63: int = const 0;
    x_64: int = const 91;
    y_64: int = const 34;
    l_64: int = const 0;
    x_65: int = const 3;
    y_65: int = const 51;
    l_65: int = const 1;
    x_66: int = const 2;
    y_66: int = const 89;
    l_66: int = const 1;
    x_67: int = const 57;
    y_67: int = const 93;
    l_67: int = const 1;
    x_68: int = const 75;
    y_68: int = const 12;
    l_68: int = const 0;
    x_69: int = const 30;
    y_69: int = const 15;
    l_69: int = const 0;
    x_70: int = const 6;
    y_70: int = const 24;
    l_70: int = const 1;
    x_71: int = const 43;
    y_71: int = const 39;
    l_71: int = const 0;
    x_72: int = const 75;
    y_72: int = const 78;
    l_72: int = const 0;
    x_73: int = const 57;
    y_73: int = const 26;
    l_73: int = const 0;
    x_74: int = const 88;
    y_74: int = const 57;
    l_74: int = const 0;
    x_75: int = const 1;
    y_75: int = const 47;
    l_75: int = const 0;
    x_76: int = const 12;
    y_76: int = const 37;
    l_76: int = const 0;
    x_77: int = const 56;
    y_77: int = const 45;
    l_77: int = const 1;
    x_78: int = const 19;
    y_78: int = const 41;
    l_78: int = const 1;
    x_79: int = const 59;
    y_79: int = const 3;
    l_79: int = const 1;
    x_80: int = const 99;
    y_80: int = const 16;
    l_80: int = const 1;
    x_81: int = const 24;
    y_81: int = const 88;
    l_81: int = const 1;
    x_82: int = const 12;
    y_82: int = const 85;
    l_82: int = const 0;
    x_83: int = const 18;
    y_83: int = const 75;
    l_83: int = const 0;
    x_84: int = const 13;
    y_84: int = const 0;
    l_84: int = const 0;
    x_85: int = const 4;
    y_85: int = const 9;
    l_85: int = const 0;
    x_86: int = const 75;
    y_86: int = const 80;
    l_86: int = const 0;
    x_87: int = const 74;
    y_87: int = const 3;
    l_87: int = const 1;
    x_88: int = const 60;
    y_88: int = const 85;
    l_88: int = const 1;
    x_89: int = const 26;
    y_89: int = const 85;
    l_89: int = const 1;
    x_90: int = const 31;
    y_90: int = const 85;
    l_90: int = const 1;
    x_91: int = const 88;
    y_91: int = const 33;
    l_91: int = const 0;
    x_92: int = const 8;
    y_92: int = const 99;
    l_92: int = const 1;
    x_93: int = const 30;
    y_93: int = const 45;
    l_93: int = const 1;
    x_94: int = const 63;
    y_94: int = const 40;
    l_94: int = const 1;
    x_95: int = const 39;
    y_95: int = const 49;
    l_95: int = const 0;
    x_96: int = const 71;
    y_96: int = const 10;
    l_96: int = const 1;
    x_97: int = const 97;
    y_97: int = const 46;
    l_97: int = const 1;
    x_98: int = const 94;
    y_98: int = const 89;
    l_98: int = const 1;
    x_99: int = const 82;
    y_99: int = const 34;
    l_99: int = const 0;
        xdiff: int = sub x_0 x_t;
        x2diff: int = sub x_t x_0;
        ydiff: int = sub y_0 y_t;
        y2diff: int = sub y_t y_0;
        xcheck: bool = le xdiff zero;
        br xcheck here_0 there_0;
    here_0:
        x: int = id x2diff;
        jmp continue_0;
    there_0:
        x: int = id xdiff;
        jmp continue_0;
    continue_0:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_0 there_y_0;
    here_y_0:
        y: int = id y2diff;
        jmp continue_y_0;
    there_y_0:
        y: int = id ydiff;
        jmp continue_y_0;
    continue_y_0:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_0 next_0;
    set_0:
        min: int = id mdist;
        min_label: int = id l_0;
        jmp next_0;
    next_0:
        xdiff: int = sub x_1 x_t;
        x2diff: int = sub x_t x_1;
        ydiff: int = sub y_1 y_t;
        y2diff: int = sub y_t y_1;
        xcheck: bool = le xdiff zero;
        br xcheck here_1 there_1;
    here_1:
        x: int = id x2diff;
        jmp continue_1;
    there_1:
        x: int = id xdiff;
        jmp continue_1;
    continue_1:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_1 there_y_1;
    here_y_1:
        y: int = id y2diff;
        jmp continue_y_1;
    there_y_1:
        y: int = id ydiff;
        jmp continue_y_1;
    continue_y_1:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_1 next_1;
    set_1:
        min: int = id mdist;
        min_label: int = id l_1;
        jmp next_1;
    next_1:
        xdiff: int = sub x_2 x_t;
        x2diff: int = sub x_t x_2;
        ydiff: int = sub y_2 y_t;
        y2diff: int = sub y_t y_2;
        xcheck: bool = le xdiff zero;
        br xcheck here_2 there_2;
    here_2:
        x: int = id x2diff;
        jmp continue_2;
    there_2:
        x: int = id xdiff;
        jmp continue_2;
    continue_2:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_2 there_y_2;
    here_y_2:
        y: int = id y2diff;
        jmp continue_y_2;
    there_y_2:
        y: int = id ydiff;
        jmp continue_y_2;
    continue_y_2:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_2 next_2;
    set_2:
        min: int = id mdist;
        min_label: int = id l_2;
        jmp next_2;
    next_2:
        xdiff: int = sub x_3 x_t;
        x2diff: int = sub x_t x_3;
        ydiff: int = sub y_3 y_t;
        y2diff: int = sub y_t y_3;
        xcheck: bool = le xdiff zero;
        br xcheck here_3 there_3;
    here_3:
        x: int = id x2diff;
        jmp continue_3;
    there_3:
        x: int = id xdiff;
        jmp continue_3;
    continue_3:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_3 there_y_3;
    here_y_3:
        y: int = id y2diff;
        jmp continue_y_3;
    there_y_3:
        y: int = id ydiff;
        jmp continue_y_3;
    continue_y_3:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_3 next_3;
    set_3:
        min: int = id mdist;
        min_label: int = id l_3;
        jmp next_3;
    next_3:
        xdiff: int = sub x_4 x_t;
        x2diff: int = sub x_t x_4;
        ydiff: int = sub y_4 y_t;
        y2diff: int = sub y_t y_4;
        xcheck: bool = le xdiff zero;
        br xcheck here_4 there_4;
    here_4:
        x: int = id x2diff;
        jmp continue_4;
    there_4:
        x: int = id xdiff;
        jmp continue_4;
    continue_4:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_4 there_y_4;
    here_y_4:
        y: int = id y2diff;
        jmp continue_y_4;
    there_y_4:
        y: int = id ydiff;
        jmp continue_y_4;
    continue_y_4:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_4 next_4;
    set_4:
        min: int = id mdist;
        min_label: int = id l_4;
        jmp next_4;
    next_4:
        xdiff: int = sub x_5 x_t;
        x2diff: int = sub x_t x_5;
        ydiff: int = sub y_5 y_t;
        y2diff: int = sub y_t y_5;
        xcheck: bool = le xdiff zero;
        br xcheck here_5 there_5;
    here_5:
        x: int = id x2diff;
        jmp continue_5;
    there_5:
        x: int = id xdiff;
        jmp continue_5;
    continue_5:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_5 there_y_5;
    here_y_5:
        y: int = id y2diff;
        jmp continue_y_5;
    there_y_5:
        y: int = id ydiff;
        jmp continue_y_5;
    continue_y_5:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_5 next_5;
    set_5:
        min: int = id mdist;
        min_label: int = id l_5;
        jmp next_5;
    next_5:
        xdiff: int = sub x_6 x_t;
        x2diff: int = sub x_t x_6;
        ydiff: int = sub y_6 y_t;
        y2diff: int = sub y_t y_6;
        xcheck: bool = le xdiff zero;
        br xcheck here_6 there_6;
    here_6:
        x: int = id x2diff;
        jmp continue_6;
    there_6:
        x: int = id xdiff;
        jmp continue_6;
    continue_6:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_6 there_y_6;
    here_y_6:
        y: int = id y2diff;
        jmp continue_y_6;
    there_y_6:
        y: int = id ydiff;
        jmp continue_y_6;
    continue_y_6:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_6 next_6;
    set_6:
        min: int = id mdist;
        min_label: int = id l_6;
        jmp next_6;
    next_6:
        xdiff: int = sub x_7 x_t;
        x2diff: int = sub x_t x_7;
        ydiff: int = sub y_7 y_t;
        y2diff: int = sub y_t y_7;
        xcheck: bool = le xdiff zero;
        br xcheck here_7 there_7;
    here_7:
        x: int = id x2diff;
        jmp continue_7;
    there_7:
        x: int = id xdiff;
        jmp continue_7;
    continue_7:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_7 there_y_7;
    here_y_7:
        y: int = id y2diff;
        jmp continue_y_7;
    there_y_7:
        y: int = id ydiff;
        jmp continue_y_7;
    continue_y_7:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_7 next_7;
    set_7:
        min: int = id mdist;
        min_label: int = id l_7;
        jmp next_7;
    next_7:
        xdiff: int = sub x_8 x_t;
        x2diff: int = sub x_t x_8;
        ydiff: int = sub y_8 y_t;
        y2diff: int = sub y_t y_8;
        xcheck: bool = le xdiff zero;
        br xcheck here_8 there_8;
    here_8:
        x: int = id x2diff;
        jmp continue_8;
    there_8:
        x: int = id xdiff;
        jmp continue_8;
    continue_8:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_8 there_y_8;
    here_y_8:
        y: int = id y2diff;
        jmp continue_y_8;
    there_y_8:
        y: int = id ydiff;
        jmp continue_y_8;
    continue_y_8:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_8 next_8;
    set_8:
        min: int = id mdist;
        min_label: int = id l_8;
        jmp next_8;
    next_8:
        xdiff: int = sub x_9 x_t;
        x2diff: int = sub x_t x_9;
        ydiff: int = sub y_9 y_t;
        y2diff: int = sub y_t y_9;
        xcheck: bool = le xdiff zero;
        br xcheck here_9 there_9;
    here_9:
        x: int = id x2diff;
        jmp continue_9;
    there_9:
        x: int = id xdiff;
        jmp continue_9;
    continue_9:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_9 there_y_9;
    here_y_9:
        y: int = id y2diff;
        jmp continue_y_9;
    there_y_9:
        y: int = id ydiff;
        jmp continue_y_9;
    continue_y_9:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_9 next_9;
    set_9:
        min: int = id mdist;
        min_label: int = id l_9;
        jmp next_9;
    next_9:
        xdiff: int = sub x_10 x_t;
        x2diff: int = sub x_t x_10;
        ydiff: int = sub y_10 y_t;
        y2diff: int = sub y_t y_10;
        xcheck: bool = le xdiff zero;
        br xcheck here_10 there_10;
    here_10:
        x: int = id x2diff;
        jmp continue_10;
    there_10:
        x: int = id xdiff;
        jmp continue_10;
    continue_10:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_10 there_y_10;
    here_y_10:
        y: int = id y2diff;
        jmp continue_y_10;
    there_y_10:
        y: int = id ydiff;
        jmp continue_y_10;
    continue_y_10:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_10 next_10;
    set_10:
        min: int = id mdist;
        min_label: int = id l_10;
        jmp next_10;
    next_10:
        xdiff: int = sub x_11 x_t;
        x2diff: int = sub x_t x_11;
        ydiff: int = sub y_11 y_t;
        y2diff: int = sub y_t y_11;
        xcheck: bool = le xdiff zero;
        br xcheck here_11 there_11;
    here_11:
        x: int = id x2diff;
        jmp continue_11;
    there_11:
        x: int = id xdiff;
        jmp continue_11;
    continue_11:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_11 there_y_11;
    here_y_11:
        y: int = id y2diff;
        jmp continue_y_11;
    there_y_11:
        y: int = id ydiff;
        jmp continue_y_11;
    continue_y_11:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_11 next_11;
    set_11:
        min: int = id mdist;
        min_label: int = id l_11;
        jmp next_11;
    next_11:
        xdiff: int = sub x_12 x_t;
        x2diff: int = sub x_t x_12;
        ydiff: int = sub y_12 y_t;
        y2diff: int = sub y_t y_12;
        xcheck: bool = le xdiff zero;
        br xcheck here_12 there_12;
    here_12:
        x: int = id x2diff;
        jmp continue_12;
    there_12:
        x: int = id xdiff;
        jmp continue_12;
    continue_12:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_12 there_y_12;
    here_y_12:
        y: int = id y2diff;
        jmp continue_y_12;
    there_y_12:
        y: int = id ydiff;
        jmp continue_y_12;
    continue_y_12:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_12 next_12;
    set_12:
        min: int = id mdist;
        min_label: int = id l_12;
        jmp next_12;
    next_12:
        xdiff: int = sub x_13 x_t;
        x2diff: int = sub x_t x_13;
        ydiff: int = sub y_13 y_t;
        y2diff: int = sub y_t y_13;
        xcheck: bool = le xdiff zero;
        br xcheck here_13 there_13;
    here_13:
        x: int = id x2diff;
        jmp continue_13;
    there_13:
        x: int = id xdiff;
        jmp continue_13;
    continue_13:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_13 there_y_13;
    here_y_13:
        y: int = id y2diff;
        jmp continue_y_13;
    there_y_13:
        y: int = id ydiff;
        jmp continue_y_13;
    continue_y_13:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_13 next_13;
    set_13:
        min: int = id mdist;
        min_label: int = id l_13;
        jmp next_13;
    next_13:
        xdiff: int = sub x_14 x_t;
        x2diff: int = sub x_t x_14;
        ydiff: int = sub y_14 y_t;
        y2diff: int = sub y_t y_14;
        xcheck: bool = le xdiff zero;
        br xcheck here_14 there_14;
    here_14:
        x: int = id x2diff;
        jmp continue_14;
    there_14:
        x: int = id xdiff;
        jmp continue_14;
    continue_14:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_14 there_y_14;
    here_y_14:
        y: int = id y2diff;
        jmp continue_y_14;
    there_y_14:
        y: int = id ydiff;
        jmp continue_y_14;
    continue_y_14:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_14 next_14;
    set_14:
        min: int = id mdist;
        min_label: int = id l_14;
        jmp next_14;
    next_14:
        xdiff: int = sub x_15 x_t;
        x2diff: int = sub x_t x_15;
        ydiff: int = sub y_15 y_t;
        y2diff: int = sub y_t y_15;
        xcheck: bool = le xdiff zero;
        br xcheck here_15 there_15;
    here_15:
        x: int = id x2diff;
        jmp continue_15;
    there_15:
        x: int = id xdiff;
        jmp continue_15;
    continue_15:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_15 there_y_15;
    here_y_15:
        y: int = id y2diff;
        jmp continue_y_15;
    there_y_15:
        y: int = id ydiff;
        jmp continue_y_15;
    continue_y_15:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_15 next_15;
    set_15:
        min: int = id mdist;
        min_label: int = id l_15;
        jmp next_15;
    next_15:
        xdiff: int = sub x_16 x_t;
        x2diff: int = sub x_t x_16;
        ydiff: int = sub y_16 y_t;
        y2diff: int = sub y_t y_16;
        xcheck: bool = le xdiff zero;
        br xcheck here_16 there_16;
    here_16:
        x: int = id x2diff;
        jmp continue_16;
    there_16:
        x: int = id xdiff;
        jmp continue_16;
    continue_16:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_16 there_y_16;
    here_y_16:
        y: int = id y2diff;
        jmp continue_y_16;
    there_y_16:
        y: int = id ydiff;
        jmp continue_y_16;
    continue_y_16:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_16 next_16;
    set_16:
        min: int = id mdist;
        min_label: int = id l_16;
        jmp next_16;
    next_16:
        xdiff: int = sub x_17 x_t;
        x2diff: int = sub x_t x_17;
        ydiff: int = sub y_17 y_t;
        y2diff: int = sub y_t y_17;
        xcheck: bool = le xdiff zero;
        br xcheck here_17 there_17;
    here_17:
        x: int = id x2diff;
        jmp continue_17;
    there_17:
        x: int = id xdiff;
        jmp continue_17;
    continue_17:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_17 there_y_17;
    here_y_17:
        y: int = id y2diff;
        jmp continue_y_17;
    there_y_17:
        y: int = id ydiff;
        jmp continue_y_17;
    continue_y_17:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_17 next_17;
    set_17:
        min: int = id mdist;
        min_label: int = id l_17;
        jmp next_17;
    next_17:
        xdiff: int = sub x_18 x_t;
        x2diff: int = sub x_t x_18;
        ydiff: int = sub y_18 y_t;
        y2diff: int = sub y_t y_18;
        xcheck: bool = le xdiff zero;
        br xcheck here_18 there_18;
    here_18:
        x: int = id x2diff;
        jmp continue_18;
    there_18:
        x: int = id xdiff;
        jmp continue_18;
    continue_18:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_18 there_y_18;
    here_y_18:
        y: int = id y2diff;
        jmp continue_y_18;
    there_y_18:
        y: int = id ydiff;
        jmp continue_y_18;
    continue_y_18:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_18 next_18;
    set_18:
        min: int = id mdist;
        min_label: int = id l_18;
        jmp next_18;
    next_18:
        xdiff: int = sub x_19 x_t;
        x2diff: int = sub x_t x_19;
        ydiff: int = sub y_19 y_t;
        y2diff: int = sub y_t y_19;
        xcheck: bool = le xdiff zero;
        br xcheck here_19 there_19;
    here_19:
        x: int = id x2diff;
        jmp continue_19;
    there_19:
        x: int = id xdiff;
        jmp continue_19;
    continue_19:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_19 there_y_19;
    here_y_19:
        y: int = id y2diff;
        jmp continue_y_19;
    there_y_19:
        y: int = id ydiff;
        jmp continue_y_19;
    continue_y_19:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_19 next_19;
    set_19:
        min: int = id mdist;
        min_label: int = id l_19;
        jmp next_19;
    next_19:
        xdiff: int = sub x_20 x_t;
        x2diff: int = sub x_t x_20;
        ydiff: int = sub y_20 y_t;
        y2diff: int = sub y_t y_20;
        xcheck: bool = le xdiff zero;
        br xcheck here_20 there_20;
    here_20:
        x: int = id x2diff;
        jmp continue_20;
    there_20:
        x: int = id xdiff;
        jmp continue_20;
    continue_20:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_20 there_y_20;
    here_y_20:
        y: int = id y2diff;
        jmp continue_y_20;
    there_y_20:
        y: int = id ydiff;
        jmp continue_y_20;
    continue_y_20:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_20 next_20;
    set_20:
        min: int = id mdist;
        min_label: int = id l_20;
        jmp next_20;
    next_20:
        xdiff: int = sub x_21 x_t;
        x2diff: int = sub x_t x_21;
        ydiff: int = sub y_21 y_t;
        y2diff: int = sub y_t y_21;
        xcheck: bool = le xdiff zero;
        br xcheck here_21 there_21;
    here_21:
        x: int = id x2diff;
        jmp continue_21;
    there_21:
        x: int = id xdiff;
        jmp continue_21;
    continue_21:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_21 there_y_21;
    here_y_21:
        y: int = id y2diff;
        jmp continue_y_21;
    there_y_21:
        y: int = id ydiff;
        jmp continue_y_21;
    continue_y_21:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_21 next_21;
    set_21:
        min: int = id mdist;
        min_label: int = id l_21;
        jmp next_21;
    next_21:
        xdiff: int = sub x_22 x_t;
        x2diff: int = sub x_t x_22;
        ydiff: int = sub y_22 y_t;
        y2diff: int = sub y_t y_22;
        xcheck: bool = le xdiff zero;
        br xcheck here_22 there_22;
    here_22:
        x: int = id x2diff;
        jmp continue_22;
    there_22:
        x: int = id xdiff;
        jmp continue_22;
    continue_22:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_22 there_y_22;
    here_y_22:
        y: int = id y2diff;
        jmp continue_y_22;
    there_y_22:
        y: int = id ydiff;
        jmp continue_y_22;
    continue_y_22:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_22 next_22;
    set_22:
        min: int = id mdist;
        min_label: int = id l_22;
        jmp next_22;
    next_22:
        xdiff: int = sub x_23 x_t;
        x2diff: int = sub x_t x_23;
        ydiff: int = sub y_23 y_t;
        y2diff: int = sub y_t y_23;
        xcheck: bool = le xdiff zero;
        br xcheck here_23 there_23;
    here_23:
        x: int = id x2diff;
        jmp continue_23;
    there_23:
        x: int = id xdiff;
        jmp continue_23;
    continue_23:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_23 there_y_23;
    here_y_23:
        y: int = id y2diff;
        jmp continue_y_23;
    there_y_23:
        y: int = id ydiff;
        jmp continue_y_23;
    continue_y_23:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_23 next_23;
    set_23:
        min: int = id mdist;
        min_label: int = id l_23;
        jmp next_23;
    next_23:
        xdiff: int = sub x_24 x_t;
        x2diff: int = sub x_t x_24;
        ydiff: int = sub y_24 y_t;
        y2diff: int = sub y_t y_24;
        xcheck: bool = le xdiff zero;
        br xcheck here_24 there_24;
    here_24:
        x: int = id x2diff;
        jmp continue_24;
    there_24:
        x: int = id xdiff;
        jmp continue_24;
    continue_24:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_24 there_y_24;
    here_y_24:
        y: int = id y2diff;
        jmp continue_y_24;
    there_y_24:
        y: int = id ydiff;
        jmp continue_y_24;
    continue_y_24:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_24 next_24;
    set_24:
        min: int = id mdist;
        min_label: int = id l_24;
        jmp next_24;
    next_24:
        xdiff: int = sub x_25 x_t;
        x2diff: int = sub x_t x_25;
        ydiff: int = sub y_25 y_t;
        y2diff: int = sub y_t y_25;
        xcheck: bool = le xdiff zero;
        br xcheck here_25 there_25;
    here_25:
        x: int = id x2diff;
        jmp continue_25;
    there_25:
        x: int = id xdiff;
        jmp continue_25;
    continue_25:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_25 there_y_25;
    here_y_25:
        y: int = id y2diff;
        jmp continue_y_25;
    there_y_25:
        y: int = id ydiff;
        jmp continue_y_25;
    continue_y_25:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_25 next_25;
    set_25:
        min: int = id mdist;
        min_label: int = id l_25;
        jmp next_25;
    next_25:
        xdiff: int = sub x_26 x_t;
        x2diff: int = sub x_t x_26;
        ydiff: int = sub y_26 y_t;
        y2diff: int = sub y_t y_26;
        xcheck: bool = le xdiff zero;
        br xcheck here_26 there_26;
    here_26:
        x: int = id x2diff;
        jmp continue_26;
    there_26:
        x: int = id xdiff;
        jmp continue_26;
    continue_26:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_26 there_y_26;
    here_y_26:
        y: int = id y2diff;
        jmp continue_y_26;
    there_y_26:
        y: int = id ydiff;
        jmp continue_y_26;
    continue_y_26:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_26 next_26;
    set_26:
        min: int = id mdist;
        min_label: int = id l_26;
        jmp next_26;
    next_26:
        xdiff: int = sub x_27 x_t;
        x2diff: int = sub x_t x_27;
        ydiff: int = sub y_27 y_t;
        y2diff: int = sub y_t y_27;
        xcheck: bool = le xdiff zero;
        br xcheck here_27 there_27;
    here_27:
        x: int = id x2diff;
        jmp continue_27;
    there_27:
        x: int = id xdiff;
        jmp continue_27;
    continue_27:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_27 there_y_27;
    here_y_27:
        y: int = id y2diff;
        jmp continue_y_27;
    there_y_27:
        y: int = id ydiff;
        jmp continue_y_27;
    continue_y_27:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_27 next_27;
    set_27:
        min: int = id mdist;
        min_label: int = id l_27;
        jmp next_27;
    next_27:
        xdiff: int = sub x_28 x_t;
        x2diff: int = sub x_t x_28;
        ydiff: int = sub y_28 y_t;
        y2diff: int = sub y_t y_28;
        xcheck: bool = le xdiff zero;
        br xcheck here_28 there_28;
    here_28:
        x: int = id x2diff;
        jmp continue_28;
    there_28:
        x: int = id xdiff;
        jmp continue_28;
    continue_28:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_28 there_y_28;
    here_y_28:
        y: int = id y2diff;
        jmp continue_y_28;
    there_y_28:
        y: int = id ydiff;
        jmp continue_y_28;
    continue_y_28:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_28 next_28;
    set_28:
        min: int = id mdist;
        min_label: int = id l_28;
        jmp next_28;
    next_28:
        xdiff: int = sub x_29 x_t;
        x2diff: int = sub x_t x_29;
        ydiff: int = sub y_29 y_t;
        y2diff: int = sub y_t y_29;
        xcheck: bool = le xdiff zero;
        br xcheck here_29 there_29;
    here_29:
        x: int = id x2diff;
        jmp continue_29;
    there_29:
        x: int = id xdiff;
        jmp continue_29;
    continue_29:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_29 there_y_29;
    here_y_29:
        y: int = id y2diff;
        jmp continue_y_29;
    there_y_29:
        y: int = id ydiff;
        jmp continue_y_29;
    continue_y_29:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_29 next_29;
    set_29:
        min: int = id mdist;
        min_label: int = id l_29;
        jmp next_29;
    next_29:
        xdiff: int = sub x_30 x_t;
        x2diff: int = sub x_t x_30;
        ydiff: int = sub y_30 y_t;
        y2diff: int = sub y_t y_30;
        xcheck: bool = le xdiff zero;
        br xcheck here_30 there_30;
    here_30:
        x: int = id x2diff;
        jmp continue_30;
    there_30:
        x: int = id xdiff;
        jmp continue_30;
    continue_30:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_30 there_y_30;
    here_y_30:
        y: int = id y2diff;
        jmp continue_y_30;
    there_y_30:
        y: int = id ydiff;
        jmp continue_y_30;
    continue_y_30:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_30 next_30;
    set_30:
        min: int = id mdist;
        min_label: int = id l_30;
        jmp next_30;
    next_30:
        xdiff: int = sub x_31 x_t;
        x2diff: int = sub x_t x_31;
        ydiff: int = sub y_31 y_t;
        y2diff: int = sub y_t y_31;
        xcheck: bool = le xdiff zero;
        br xcheck here_31 there_31;
    here_31:
        x: int = id x2diff;
        jmp continue_31;
    there_31:
        x: int = id xdiff;
        jmp continue_31;
    continue_31:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_31 there_y_31;
    here_y_31:
        y: int = id y2diff;
        jmp continue_y_31;
    there_y_31:
        y: int = id ydiff;
        jmp continue_y_31;
    continue_y_31:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_31 next_31;
    set_31:
        min: int = id mdist;
        min_label: int = id l_31;
        jmp next_31;
    next_31:
        xdiff: int = sub x_32 x_t;
        x2diff: int = sub x_t x_32;
        ydiff: int = sub y_32 y_t;
        y2diff: int = sub y_t y_32;
        xcheck: bool = le xdiff zero;
        br xcheck here_32 there_32;
    here_32:
        x: int = id x2diff;
        jmp continue_32;
    there_32:
        x: int = id xdiff;
        jmp continue_32;
    continue_32:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_32 there_y_32;
    here_y_32:
        y: int = id y2diff;
        jmp continue_y_32;
    there_y_32:
        y: int = id ydiff;
        jmp continue_y_32;
    continue_y_32:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_32 next_32;
    set_32:
        min: int = id mdist;
        min_label: int = id l_32;
        jmp next_32;
    next_32:
        xdiff: int = sub x_33 x_t;
        x2diff: int = sub x_t x_33;
        ydiff: int = sub y_33 y_t;
        y2diff: int = sub y_t y_33;
        xcheck: bool = le xdiff zero;
        br xcheck here_33 there_33;
    here_33:
        x: int = id x2diff;
        jmp continue_33;
    there_33:
        x: int = id xdiff;
        jmp continue_33;
    continue_33:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_33 there_y_33;
    here_y_33:
        y: int = id y2diff;
        jmp continue_y_33;
    there_y_33:
        y: int = id ydiff;
        jmp continue_y_33;
    continue_y_33:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_33 next_33;
    set_33:
        min: int = id mdist;
        min_label: int = id l_33;
        jmp next_33;
    next_33:
        xdiff: int = sub x_34 x_t;
        x2diff: int = sub x_t x_34;
        ydiff: int = sub y_34 y_t;
        y2diff: int = sub y_t y_34;
        xcheck: bool = le xdiff zero;
        br xcheck here_34 there_34;
    here_34:
        x: int = id x2diff;
        jmp continue_34;
    there_34:
        x: int = id xdiff;
        jmp continue_34;
    continue_34:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_34 there_y_34;
    here_y_34:
        y: int = id y2diff;
        jmp continue_y_34;
    there_y_34:
        y: int = id ydiff;
        jmp continue_y_34;
    continue_y_34:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_34 next_34;
    set_34:
        min: int = id mdist;
        min_label: int = id l_34;
        jmp next_34;
    next_34:
        xdiff: int = sub x_35 x_t;
        x2diff: int = sub x_t x_35;
        ydiff: int = sub y_35 y_t;
        y2diff: int = sub y_t y_35;
        xcheck: bool = le xdiff zero;
        br xcheck here_35 there_35;
    here_35:
        x: int = id x2diff;
        jmp continue_35;
    there_35:
        x: int = id xdiff;
        jmp continue_35;
    continue_35:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_35 there_y_35;
    here_y_35:
        y: int = id y2diff;
        jmp continue_y_35;
    there_y_35:
        y: int = id ydiff;
        jmp continue_y_35;
    continue_y_35:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_35 next_35;
    set_35:
        min: int = id mdist;
        min_label: int = id l_35;
        jmp next_35;
    next_35:
        xdiff: int = sub x_36 x_t;
        x2diff: int = sub x_t x_36;
        ydiff: int = sub y_36 y_t;
        y2diff: int = sub y_t y_36;
        xcheck: bool = le xdiff zero;
        br xcheck here_36 there_36;
    here_36:
        x: int = id x2diff;
        jmp continue_36;
    there_36:
        x: int = id xdiff;
        jmp continue_36;
    continue_36:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_36 there_y_36;
    here_y_36:
        y: int = id y2diff;
        jmp continue_y_36;
    there_y_36:
        y: int = id ydiff;
        jmp continue_y_36;
    continue_y_36:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_36 next_36;
    set_36:
        min: int = id mdist;
        min_label: int = id l_36;
        jmp next_36;
    next_36:
        xdiff: int = sub x_37 x_t;
        x2diff: int = sub x_t x_37;
        ydiff: int = sub y_37 y_t;
        y2diff: int = sub y_t y_37;
        xcheck: bool = le xdiff zero;
        br xcheck here_37 there_37;
    here_37:
        x: int = id x2diff;
        jmp continue_37;
    there_37:
        x: int = id xdiff;
        jmp continue_37;
    continue_37:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_37 there_y_37;
    here_y_37:
        y: int = id y2diff;
        jmp continue_y_37;
    there_y_37:
        y: int = id ydiff;
        jmp continue_y_37;
    continue_y_37:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_37 next_37;
    set_37:
        min: int = id mdist;
        min_label: int = id l_37;
        jmp next_37;
    next_37:
        xdiff: int = sub x_38 x_t;
        x2diff: int = sub x_t x_38;
        ydiff: int = sub y_38 y_t;
        y2diff: int = sub y_t y_38;
        xcheck: bool = le xdiff zero;
        br xcheck here_38 there_38;
    here_38:
        x: int = id x2diff;
        jmp continue_38;
    there_38:
        x: int = id xdiff;
        jmp continue_38;
    continue_38:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_38 there_y_38;
    here_y_38:
        y: int = id y2diff;
        jmp continue_y_38;
    there_y_38:
        y: int = id ydiff;
        jmp continue_y_38;
    continue_y_38:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_38 next_38;
    set_38:
        min: int = id mdist;
        min_label: int = id l_38;
        jmp next_38;
    next_38:
        xdiff: int = sub x_39 x_t;
        x2diff: int = sub x_t x_39;
        ydiff: int = sub y_39 y_t;
        y2diff: int = sub y_t y_39;
        xcheck: bool = le xdiff zero;
        br xcheck here_39 there_39;
    here_39:
        x: int = id x2diff;
        jmp continue_39;
    there_39:
        x: int = id xdiff;
        jmp continue_39;
    continue_39:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_39 there_y_39;
    here_y_39:
        y: int = id y2diff;
        jmp continue_y_39;
    there_y_39:
        y: int = id ydiff;
        jmp continue_y_39;
    continue_y_39:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_39 next_39;
    set_39:
        min: int = id mdist;
        min_label: int = id l_39;
        jmp next_39;
    next_39:
        xdiff: int = sub x_40 x_t;
        x2diff: int = sub x_t x_40;
        ydiff: int = sub y_40 y_t;
        y2diff: int = sub y_t y_40;
        xcheck: bool = le xdiff zero;
        br xcheck here_40 there_40;
    here_40:
        x: int = id x2diff;
        jmp continue_40;
    there_40:
        x: int = id xdiff;
        jmp continue_40;
    continue_40:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_40 there_y_40;
    here_y_40:
        y: int = id y2diff;
        jmp continue_y_40;
    there_y_40:
        y: int = id ydiff;
        jmp continue_y_40;
    continue_y_40:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_40 next_40;
    set_40:
        min: int = id mdist;
        min_label: int = id l_40;
        jmp next_40;
    next_40:
        xdiff: int = sub x_41 x_t;
        x2diff: int = sub x_t x_41;
        ydiff: int = sub y_41 y_t;
        y2diff: int = sub y_t y_41;
        xcheck: bool = le xdiff zero;
        br xcheck here_41 there_41;
    here_41:
        x: int = id x2diff;
        jmp continue_41;
    there_41:
        x: int = id xdiff;
        jmp continue_41;
    continue_41:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_41 there_y_41;
    here_y_41:
        y: int = id y2diff;
        jmp continue_y_41;
    there_y_41:
        y: int = id ydiff;
        jmp continue_y_41;
    continue_y_41:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_41 next_41;
    set_41:
        min: int = id mdist;
        min_label: int = id l_41;
        jmp next_41;
    next_41:
        xdiff: int = sub x_42 x_t;
        x2diff: int = sub x_t x_42;
        ydiff: int = sub y_42 y_t;
        y2diff: int = sub y_t y_42;
        xcheck: bool = le xdiff zero;
        br xcheck here_42 there_42;
    here_42:
        x: int = id x2diff;
        jmp continue_42;
    there_42:
        x: int = id xdiff;
        jmp continue_42;
    continue_42:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_42 there_y_42;
    here_y_42:
        y: int = id y2diff;
        jmp continue_y_42;
    there_y_42:
        y: int = id ydiff;
        jmp continue_y_42;
    continue_y_42:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_42 next_42;
    set_42:
        min: int = id mdist;
        min_label: int = id l_42;
        jmp next_42;
    next_42:
        xdiff: int = sub x_43 x_t;
        x2diff: int = sub x_t x_43;
        ydiff: int = sub y_43 y_t;
        y2diff: int = sub y_t y_43;
        xcheck: bool = le xdiff zero;
        br xcheck here_43 there_43;
    here_43:
        x: int = id x2diff;
        jmp continue_43;
    there_43:
        x: int = id xdiff;
        jmp continue_43;
    continue_43:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_43 there_y_43;
    here_y_43:
        y: int = id y2diff;
        jmp continue_y_43;
    there_y_43:
        y: int = id ydiff;
        jmp continue_y_43;
    continue_y_43:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_43 next_43;
    set_43:
        min: int = id mdist;
        min_label: int = id l_43;
        jmp next_43;
    next_43:
        xdiff: int = sub x_44 x_t;
        x2diff: int = sub x_t x_44;
        ydiff: int = sub y_44 y_t;
        y2diff: int = sub y_t y_44;
        xcheck: bool = le xdiff zero;
        br xcheck here_44 there_44;
    here_44:
        x: int = id x2diff;
        jmp continue_44;
    there_44:
        x: int = id xdiff;
        jmp continue_44;
    continue_44:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_44 there_y_44;
    here_y_44:
        y: int = id y2diff;
        jmp continue_y_44;
    there_y_44:
        y: int = id ydiff;
        jmp continue_y_44;
    continue_y_44:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_44 next_44;
    set_44:
        min: int = id mdist;
        min_label: int = id l_44;
        jmp next_44;
    next_44:
        xdiff: int = sub x_45 x_t;
        x2diff: int = sub x_t x_45;
        ydiff: int = sub y_45 y_t;
        y2diff: int = sub y_t y_45;
        xcheck: bool = le xdiff zero;
        br xcheck here_45 there_45;
    here_45:
        x: int = id x2diff;
        jmp continue_45;
    there_45:
        x: int = id xdiff;
        jmp continue_45;
    continue_45:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_45 there_y_45;
    here_y_45:
        y: int = id y2diff;
        jmp continue_y_45;
    there_y_45:
        y: int = id ydiff;
        jmp continue_y_45;
    continue_y_45:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_45 next_45;
    set_45:
        min: int = id mdist;
        min_label: int = id l_45;
        jmp next_45;
    next_45:
        xdiff: int = sub x_46 x_t;
        x2diff: int = sub x_t x_46;
        ydiff: int = sub y_46 y_t;
        y2diff: int = sub y_t y_46;
        xcheck: bool = le xdiff zero;
        br xcheck here_46 there_46;
    here_46:
        x: int = id x2diff;
        jmp continue_46;
    there_46:
        x: int = id xdiff;
        jmp continue_46;
    continue_46:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_46 there_y_46;
    here_y_46:
        y: int = id y2diff;
        jmp continue_y_46;
    there_y_46:
        y: int = id ydiff;
        jmp continue_y_46;
    continue_y_46:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_46 next_46;
    set_46:
        min: int = id mdist;
        min_label: int = id l_46;
        jmp next_46;
    next_46:
        xdiff: int = sub x_47 x_t;
        x2diff: int = sub x_t x_47;
        ydiff: int = sub y_47 y_t;
        y2diff: int = sub y_t y_47;
        xcheck: bool = le xdiff zero;
        br xcheck here_47 there_47;
    here_47:
        x: int = id x2diff;
        jmp continue_47;
    there_47:
        x: int = id xdiff;
        jmp continue_47;
    continue_47:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_47 there_y_47;
    here_y_47:
        y: int = id y2diff;
        jmp continue_y_47;
    there_y_47:
        y: int = id ydiff;
        jmp continue_y_47;
    continue_y_47:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_47 next_47;
    set_47:
        min: int = id mdist;
        min_label: int = id l_47;
        jmp next_47;
    next_47:
        xdiff: int = sub x_48 x_t;
        x2diff: int = sub x_t x_48;
        ydiff: int = sub y_48 y_t;
        y2diff: int = sub y_t y_48;
        xcheck: bool = le xdiff zero;
        br xcheck here_48 there_48;
    here_48:
        x: int = id x2diff;
        jmp continue_48;
    there_48:
        x: int = id xdiff;
        jmp continue_48;
    continue_48:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_48 there_y_48;
    here_y_48:
        y: int = id y2diff;
        jmp continue_y_48;
    there_y_48:
        y: int = id ydiff;
        jmp continue_y_48;
    continue_y_48:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_48 next_48;
    set_48:
        min: int = id mdist;
        min_label: int = id l_48;
        jmp next_48;
    next_48:
        xdiff: int = sub x_49 x_t;
        x2diff: int = sub x_t x_49;
        ydiff: int = sub y_49 y_t;
        y2diff: int = sub y_t y_49;
        xcheck: bool = le xdiff zero;
        br xcheck here_49 there_49;
    here_49:
        x: int = id x2diff;
        jmp continue_49;
    there_49:
        x: int = id xdiff;
        jmp continue_49;
    continue_49:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_49 there_y_49;
    here_y_49:
        y: int = id y2diff;
        jmp continue_y_49;
    there_y_49:
        y: int = id ydiff;
        jmp continue_y_49;
    continue_y_49:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_49 next_49;
    set_49:
        min: int = id mdist;
        min_label: int = id l_49;
        jmp next_49;
    next_49:
        xdiff: int = sub x_50 x_t;
        x2diff: int = sub x_t x_50;
        ydiff: int = sub y_50 y_t;
        y2diff: int = sub y_t y_50;
        xcheck: bool = le xdiff zero;
        br xcheck here_50 there_50;
    here_50:
        x: int = id x2diff;
        jmp continue_50;
    there_50:
        x: int = id xdiff;
        jmp continue_50;
    continue_50:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_50 there_y_50;
    here_y_50:
        y: int = id y2diff;
        jmp continue_y_50;
    there_y_50:
        y: int = id ydiff;
        jmp continue_y_50;
    continue_y_50:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_50 next_50;
    set_50:
        min: int = id mdist;
        min_label: int = id l_50;
        jmp next_50;
    next_50:
        xdiff: int = sub x_51 x_t;
        x2diff: int = sub x_t x_51;
        ydiff: int = sub y_51 y_t;
        y2diff: int = sub y_t y_51;
        xcheck: bool = le xdiff zero;
        br xcheck here_51 there_51;
    here_51:
        x: int = id x2diff;
        jmp continue_51;
    there_51:
        x: int = id xdiff;
        jmp continue_51;
    continue_51:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_51 there_y_51;
    here_y_51:
        y: int = id y2diff;
        jmp continue_y_51;
    there_y_51:
        y: int = id ydiff;
        jmp continue_y_51;
    continue_y_51:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_51 next_51;
    set_51:
        min: int = id mdist;
        min_label: int = id l_51;
        jmp next_51;
    next_51:
        xdiff: int = sub x_52 x_t;
        x2diff: int = sub x_t x_52;
        ydiff: int = sub y_52 y_t;
        y2diff: int = sub y_t y_52;
        xcheck: bool = le xdiff zero;
        br xcheck here_52 there_52;
    here_52:
        x: int = id x2diff;
        jmp continue_52;
    there_52:
        x: int = id xdiff;
        jmp continue_52;
    continue_52:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_52 there_y_52;
    here_y_52:
        y: int = id y2diff;
        jmp continue_y_52;
    there_y_52:
        y: int = id ydiff;
        jmp continue_y_52;
    continue_y_52:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_52 next_52;
    set_52:
        min: int = id mdist;
        min_label: int = id l_52;
        jmp next_52;
    next_52:
        xdiff: int = sub x_53 x_t;
        x2diff: int = sub x_t x_53;
        ydiff: int = sub y_53 y_t;
        y2diff: int = sub y_t y_53;
        xcheck: bool = le xdiff zero;
        br xcheck here_53 there_53;
    here_53:
        x: int = id x2diff;
        jmp continue_53;
    there_53:
        x: int = id xdiff;
        jmp continue_53;
    continue_53:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_53 there_y_53;
    here_y_53:
        y: int = id y2diff;
        jmp continue_y_53;
    there_y_53:
        y: int = id ydiff;
        jmp continue_y_53;
    continue_y_53:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_53 next_53;
    set_53:
        min: int = id mdist;
        min_label: int = id l_53;
        jmp next_53;
    next_53:
        xdiff: int = sub x_54 x_t;
        x2diff: int = sub x_t x_54;
        ydiff: int = sub y_54 y_t;
        y2diff: int = sub y_t y_54;
        xcheck: bool = le xdiff zero;
        br xcheck here_54 there_54;
    here_54:
        x: int = id x2diff;
        jmp continue_54;
    there_54:
        x: int = id xdiff;
        jmp continue_54;
    continue_54:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_54 there_y_54;
    here_y_54:
        y: int = id y2diff;
        jmp continue_y_54;
    there_y_54:
        y: int = id ydiff;
        jmp continue_y_54;
    continue_y_54:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_54 next_54;
    set_54:
        min: int = id mdist;
        min_label: int = id l_54;
        jmp next_54;
    next_54:
        xdiff: int = sub x_55 x_t;
        x2diff: int = sub x_t x_55;
        ydiff: int = sub y_55 y_t;
        y2diff: int = sub y_t y_55;
        xcheck: bool = le xdiff zero;
        br xcheck here_55 there_55;
    here_55:
        x: int = id x2diff;
        jmp continue_55;
    there_55:
        x: int = id xdiff;
        jmp continue_55;
    continue_55:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_55 there_y_55;
    here_y_55:
        y: int = id y2diff;
        jmp continue_y_55;
    there_y_55:
        y: int = id ydiff;
        jmp continue_y_55;
    continue_y_55:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_55 next_55;
    set_55:
        min: int = id mdist;
        min_label: int = id l_55;
        jmp next_55;
    next_55:
        xdiff: int = sub x_56 x_t;
        x2diff: int = sub x_t x_56;
        ydiff: int = sub y_56 y_t;
        y2diff: int = sub y_t y_56;
        xcheck: bool = le xdiff zero;
        br xcheck here_56 there_56;
    here_56:
        x: int = id x2diff;
        jmp continue_56;
    there_56:
        x: int = id xdiff;
        jmp continue_56;
    continue_56:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_56 there_y_56;
    here_y_56:
        y: int = id y2diff;
        jmp continue_y_56;
    there_y_56:
        y: int = id ydiff;
        jmp continue_y_56;
    continue_y_56:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_56 next_56;
    set_56:
        min: int = id mdist;
        min_label: int = id l_56;
        jmp next_56;
    next_56:
        xdiff: int = sub x_57 x_t;
        x2diff: int = sub x_t x_57;
        ydiff: int = sub y_57 y_t;
        y2diff: int = sub y_t y_57;
        xcheck: bool = le xdiff zero;
        br xcheck here_57 there_57;
    here_57:
        x: int = id x2diff;
        jmp continue_57;
    there_57:
        x: int = id xdiff;
        jmp continue_57;
    continue_57:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_57 there_y_57;
    here_y_57:
        y: int = id y2diff;
        jmp continue_y_57;
    there_y_57:
        y: int = id ydiff;
        jmp continue_y_57;
    continue_y_57:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_57 next_57;
    set_57:
        min: int = id mdist;
        min_label: int = id l_57;
        jmp next_57;
    next_57:
        xdiff: int = sub x_58 x_t;
        x2diff: int = sub x_t x_58;
        ydiff: int = sub y_58 y_t;
        y2diff: int = sub y_t y_58;
        xcheck: bool = le xdiff zero;
        br xcheck here_58 there_58;
    here_58:
        x: int = id x2diff;
        jmp continue_58;
    there_58:
        x: int = id xdiff;
        jmp continue_58;
    continue_58:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_58 there_y_58;
    here_y_58:
        y: int = id y2diff;
        jmp continue_y_58;
    there_y_58:
        y: int = id ydiff;
        jmp continue_y_58;
    continue_y_58:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_58 next_58;
    set_58:
        min: int = id mdist;
        min_label: int = id l_58;
        jmp next_58;
    next_58:
        xdiff: int = sub x_59 x_t;
        x2diff: int = sub x_t x_59;
        ydiff: int = sub y_59 y_t;
        y2diff: int = sub y_t y_59;
        xcheck: bool = le xdiff zero;
        br xcheck here_59 there_59;
    here_59:
        x: int = id x2diff;
        jmp continue_59;
    there_59:
        x: int = id xdiff;
        jmp continue_59;
    continue_59:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_59 there_y_59;
    here_y_59:
        y: int = id y2diff;
        jmp continue_y_59;
    there_y_59:
        y: int = id ydiff;
        jmp continue_y_59;
    continue_y_59:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_59 next_59;
    set_59:
        min: int = id mdist;
        min_label: int = id l_59;
        jmp next_59;
    next_59:
        xdiff: int = sub x_60 x_t;
        x2diff: int = sub x_t x_60;
        ydiff: int = sub y_60 y_t;
        y2diff: int = sub y_t y_60;
        xcheck: bool = le xdiff zero;
        br xcheck here_60 there_60;
    here_60:
        x: int = id x2diff;
        jmp continue_60;
    there_60:
        x: int = id xdiff;
        jmp continue_60;
    continue_60:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_60 there_y_60;
    here_y_60:
        y: int = id y2diff;
        jmp continue_y_60;
    there_y_60:
        y: int = id ydiff;
        jmp continue_y_60;
    continue_y_60:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_60 next_60;
    set_60:
        min: int = id mdist;
        min_label: int = id l_60;
        jmp next_60;
    next_60:
        xdiff: int = sub x_61 x_t;
        x2diff: int = sub x_t x_61;
        ydiff: int = sub y_61 y_t;
        y2diff: int = sub y_t y_61;
        xcheck: bool = le xdiff zero;
        br xcheck here_61 there_61;
    here_61:
        x: int = id x2diff;
        jmp continue_61;
    there_61:
        x: int = id xdiff;
        jmp continue_61;
    continue_61:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_61 there_y_61;
    here_y_61:
        y: int = id y2diff;
        jmp continue_y_61;
    there_y_61:
        y: int = id ydiff;
        jmp continue_y_61;
    continue_y_61:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_61 next_61;
    set_61:
        min: int = id mdist;
        min_label: int = id l_61;
        jmp next_61;
    next_61:
        xdiff: int = sub x_62 x_t;
        x2diff: int = sub x_t x_62;
        ydiff: int = sub y_62 y_t;
        y2diff: int = sub y_t y_62;
        xcheck: bool = le xdiff zero;
        br xcheck here_62 there_62;
    here_62:
        x: int = id x2diff;
        jmp continue_62;
    there_62:
        x: int = id xdiff;
        jmp continue_62;
    continue_62:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_62 there_y_62;
    here_y_62:
        y: int = id y2diff;
        jmp continue_y_62;
    there_y_62:
        y: int = id ydiff;
        jmp continue_y_62;
    continue_y_62:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_62 next_62;
    set_62:
        min: int = id mdist;
        min_label: int = id l_62;
        jmp next_62;
    next_62:
        xdiff: int = sub x_63 x_t;
        x2diff: int = sub x_t x_63;
        ydiff: int = sub y_63 y_t;
        y2diff: int = sub y_t y_63;
        xcheck: bool = le xdiff zero;
        br xcheck here_63 there_63;
    here_63:
        x: int = id x2diff;
        jmp continue_63;
    there_63:
        x: int = id xdiff;
        jmp continue_63;
    continue_63:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_63 there_y_63;
    here_y_63:
        y: int = id y2diff;
        jmp continue_y_63;
    there_y_63:
        y: int = id ydiff;
        jmp continue_y_63;
    continue_y_63:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_63 next_63;
    set_63:
        min: int = id mdist;
        min_label: int = id l_63;
        jmp next_63;
    next_63:
        xdiff: int = sub x_64 x_t;
        x2diff: int = sub x_t x_64;
        ydiff: int = sub y_64 y_t;
        y2diff: int = sub y_t y_64;
        xcheck: bool = le xdiff zero;
        br xcheck here_64 there_64;
    here_64:
        x: int = id x2diff;
        jmp continue_64;
    there_64:
        x: int = id xdiff;
        jmp continue_64;
    continue_64:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_64 there_y_64;
    here_y_64:
        y: int = id y2diff;
        jmp continue_y_64;
    there_y_64:
        y: int = id ydiff;
        jmp continue_y_64;
    continue_y_64:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_64 next_64;
    set_64:
        min: int = id mdist;
        min_label: int = id l_64;
        jmp next_64;
    next_64:
        xdiff: int = sub x_65 x_t;
        x2diff: int = sub x_t x_65;
        ydiff: int = sub y_65 y_t;
        y2diff: int = sub y_t y_65;
        xcheck: bool = le xdiff zero;
        br xcheck here_65 there_65;
    here_65:
        x: int = id x2diff;
        jmp continue_65;
    there_65:
        x: int = id xdiff;
        jmp continue_65;
    continue_65:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_65 there_y_65;
    here_y_65:
        y: int = id y2diff;
        jmp continue_y_65;
    there_y_65:
        y: int = id ydiff;
        jmp continue_y_65;
    continue_y_65:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_65 next_65;
    set_65:
        min: int = id mdist;
        min_label: int = id l_65;
        jmp next_65;
    next_65:
        xdiff: int = sub x_66 x_t;
        x2diff: int = sub x_t x_66;
        ydiff: int = sub y_66 y_t;
        y2diff: int = sub y_t y_66;
        xcheck: bool = le xdiff zero;
        br xcheck here_66 there_66;
    here_66:
        x: int = id x2diff;
        jmp continue_66;
    there_66:
        x: int = id xdiff;
        jmp continue_66;
    continue_66:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_66 there_y_66;
    here_y_66:
        y: int = id y2diff;
        jmp continue_y_66;
    there_y_66:
        y: int = id ydiff;
        jmp continue_y_66;
    continue_y_66:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_66 next_66;
    set_66:
        min: int = id mdist;
        min_label: int = id l_66;
        jmp next_66;
    next_66:
        xdiff: int = sub x_67 x_t;
        x2diff: int = sub x_t x_67;
        ydiff: int = sub y_67 y_t;
        y2diff: int = sub y_t y_67;
        xcheck: bool = le xdiff zero;
        br xcheck here_67 there_67;
    here_67:
        x: int = id x2diff;
        jmp continue_67;
    there_67:
        x: int = id xdiff;
        jmp continue_67;
    continue_67:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_67 there_y_67;
    here_y_67:
        y: int = id y2diff;
        jmp continue_y_67;
    there_y_67:
        y: int = id ydiff;
        jmp continue_y_67;
    continue_y_67:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_67 next_67;
    set_67:
        min: int = id mdist;
        min_label: int = id l_67;
        jmp next_67;
    next_67:
        xdiff: int = sub x_68 x_t;
        x2diff: int = sub x_t x_68;
        ydiff: int = sub y_68 y_t;
        y2diff: int = sub y_t y_68;
        xcheck: bool = le xdiff zero;
        br xcheck here_68 there_68;
    here_68:
        x: int = id x2diff;
        jmp continue_68;
    there_68:
        x: int = id xdiff;
        jmp continue_68;
    continue_68:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_68 there_y_68;
    here_y_68:
        y: int = id y2diff;
        jmp continue_y_68;
    there_y_68:
        y: int = id ydiff;
        jmp continue_y_68;
    continue_y_68:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_68 next_68;
    set_68:
        min: int = id mdist;
        min_label: int = id l_68;
        jmp next_68;
    next_68:
        xdiff: int = sub x_69 x_t;
        x2diff: int = sub x_t x_69;
        ydiff: int = sub y_69 y_t;
        y2diff: int = sub y_t y_69;
        xcheck: bool = le xdiff zero;
        br xcheck here_69 there_69;
    here_69:
        x: int = id x2diff;
        jmp continue_69;
    there_69:
        x: int = id xdiff;
        jmp continue_69;
    continue_69:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_69 there_y_69;
    here_y_69:
        y: int = id y2diff;
        jmp continue_y_69;
    there_y_69:
        y: int = id ydiff;
        jmp continue_y_69;
    continue_y_69:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_69 next_69;
    set_69:
        min: int = id mdist;
        min_label: int = id l_69;
        jmp next_69;
    next_69:
        xdiff: int = sub x_70 x_t;
        x2diff: int = sub x_t x_70;
        ydiff: int = sub y_70 y_t;
        y2diff: int = sub y_t y_70;
        xcheck: bool = le xdiff zero;
        br xcheck here_70 there_70;
    here_70:
        x: int = id x2diff;
        jmp continue_70;
    there_70:
        x: int = id xdiff;
        jmp continue_70;
    continue_70:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_70 there_y_70;
    here_y_70:
        y: int = id y2diff;
        jmp continue_y_70;
    there_y_70:
        y: int = id ydiff;
        jmp continue_y_70;
    continue_y_70:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_70 next_70;
    set_70:
        min: int = id mdist;
        min_label: int = id l_70;
        jmp next_70;
    next_70:
        xdiff: int = sub x_71 x_t;
        x2diff: int = sub x_t x_71;
        ydiff: int = sub y_71 y_t;
        y2diff: int = sub y_t y_71;
        xcheck: bool = le xdiff zero;
        br xcheck here_71 there_71;
    here_71:
        x: int = id x2diff;
        jmp continue_71;
    there_71:
        x: int = id xdiff;
        jmp continue_71;
    continue_71:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_71 there_y_71;
    here_y_71:
        y: int = id y2diff;
        jmp continue_y_71;
    there_y_71:
        y: int = id ydiff;
        jmp continue_y_71;
    continue_y_71:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_71 next_71;
    set_71:
        min: int = id mdist;
        min_label: int = id l_71;
        jmp next_71;
    next_71:
        xdiff: int = sub x_72 x_t;
        x2diff: int = sub x_t x_72;
        ydiff: int = sub y_72 y_t;
        y2diff: int = sub y_t y_72;
        xcheck: bool = le xdiff zero;
        br xcheck here_72 there_72;
    here_72:
        x: int = id x2diff;
        jmp continue_72;
    there_72:
        x: int = id xdiff;
        jmp continue_72;
    continue_72:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_72 there_y_72;
    here_y_72:
        y: int = id y2diff;
        jmp continue_y_72;
    there_y_72:
        y: int = id ydiff;
        jmp continue_y_72;
    continue_y_72:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_72 next_72;
    set_72:
        min: int = id mdist;
        min_label: int = id l_72;
        jmp next_72;
    next_72:
        xdiff: int = sub x_73 x_t;
        x2diff: int = sub x_t x_73;
        ydiff: int = sub y_73 y_t;
        y2diff: int = sub y_t y_73;
        xcheck: bool = le xdiff zero;
        br xcheck here_73 there_73;
    here_73:
        x: int = id x2diff;
        jmp continue_73;
    there_73:
        x: int = id xdiff;
        jmp continue_73;
    continue_73:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_73 there_y_73;
    here_y_73:
        y: int = id y2diff;
        jmp continue_y_73;
    there_y_73:
        y: int = id ydiff;
        jmp continue_y_73;
    continue_y_73:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_73 next_73;
    set_73:
        min: int = id mdist;
        min_label: int = id l_73;
        jmp next_73;
    next_73:
        xdiff: int = sub x_74 x_t;
        x2diff: int = sub x_t x_74;
        ydiff: int = sub y_74 y_t;
        y2diff: int = sub y_t y_74;
        xcheck: bool = le xdiff zero;
        br xcheck here_74 there_74;
    here_74:
        x: int = id x2diff;
        jmp continue_74;
    there_74:
        x: int = id xdiff;
        jmp continue_74;
    continue_74:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_74 there_y_74;
    here_y_74:
        y: int = id y2diff;
        jmp continue_y_74;
    there_y_74:
        y: int = id ydiff;
        jmp continue_y_74;
    continue_y_74:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_74 next_74;
    set_74:
        min: int = id mdist;
        min_label: int = id l_74;
        jmp next_74;
    next_74:
        xdiff: int = sub x_75 x_t;
        x2diff: int = sub x_t x_75;
        ydiff: int = sub y_75 y_t;
        y2diff: int = sub y_t y_75;
        xcheck: bool = le xdiff zero;
        br xcheck here_75 there_75;
    here_75:
        x: int = id x2diff;
        jmp continue_75;
    there_75:
        x: int = id xdiff;
        jmp continue_75;
    continue_75:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_75 there_y_75;
    here_y_75:
        y: int = id y2diff;
        jmp continue_y_75;
    there_y_75:
        y: int = id ydiff;
        jmp continue_y_75;
    continue_y_75:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_75 next_75;
    set_75:
        min: int = id mdist;
        min_label: int = id l_75;
        jmp next_75;
    next_75:
        xdiff: int = sub x_76 x_t;
        x2diff: int = sub x_t x_76;
        ydiff: int = sub y_76 y_t;
        y2diff: int = sub y_t y_76;
        xcheck: bool = le xdiff zero;
        br xcheck here_76 there_76;
    here_76:
        x: int = id x2diff;
        jmp continue_76;
    there_76:
        x: int = id xdiff;
        jmp continue_76;
    continue_76:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_76 there_y_76;
    here_y_76:
        y: int = id y2diff;
        jmp continue_y_76;
    there_y_76:
        y: int = id ydiff;
        jmp continue_y_76;
    continue_y_76:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_76 next_76;
    set_76:
        min: int = id mdist;
        min_label: int = id l_76;
        jmp next_76;
    next_76:
        xdiff: int = sub x_77 x_t;
        x2diff: int = sub x_t x_77;
        ydiff: int = sub y_77 y_t;
        y2diff: int = sub y_t y_77;
        xcheck: bool = le xdiff zero;
        br xcheck here_77 there_77;
    here_77:
        x: int = id x2diff;
        jmp continue_77;
    there_77:
        x: int = id xdiff;
        jmp continue_77;
    continue_77:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_77 there_y_77;
    here_y_77:
        y: int = id y2diff;
        jmp continue_y_77;
    there_y_77:
        y: int = id ydiff;
        jmp continue_y_77;
    continue_y_77:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_77 next_77;
    set_77:
        min: int = id mdist;
        min_label: int = id l_77;
        jmp next_77;
    next_77:
        xdiff: int = sub x_78 x_t;
        x2diff: int = sub x_t x_78;
        ydiff: int = sub y_78 y_t;
        y2diff: int = sub y_t y_78;
        xcheck: bool = le xdiff zero;
        br xcheck here_78 there_78;
    here_78:
        x: int = id x2diff;
        jmp continue_78;
    there_78:
        x: int = id xdiff;
        jmp continue_78;
    continue_78:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_78 there_y_78;
    here_y_78:
        y: int = id y2diff;
        jmp continue_y_78;
    there_y_78:
        y: int = id ydiff;
        jmp continue_y_78;
    continue_y_78:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_78 next_78;
    set_78:
        min: int = id mdist;
        min_label: int = id l_78;
        jmp next_78;
    next_78:
        xdiff: int = sub x_79 x_t;
        x2diff: int = sub x_t x_79;
        ydiff: int = sub y_79 y_t;
        y2diff: int = sub y_t y_79;
        xcheck: bool = le xdiff zero;
        br xcheck here_79 there_79;
    here_79:
        x: int = id x2diff;
        jmp continue_79;
    there_79:
        x: int = id xdiff;
        jmp continue_79;
    continue_79:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_79 there_y_79;
    here_y_79:
        y: int = id y2diff;
        jmp continue_y_79;
    there_y_79:
        y: int = id ydiff;
        jmp continue_y_79;
    continue_y_79:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_79 next_79;
    set_79:
        min: int = id mdist;
        min_label: int = id l_79;
        jmp next_79;
    next_79:
        xdiff: int = sub x_80 x_t;
        x2diff: int = sub x_t x_80;
        ydiff: int = sub y_80 y_t;
        y2diff: int = sub y_t y_80;
        xcheck: bool = le xdiff zero;
        br xcheck here_80 there_80;
    here_80:
        x: int = id x2diff;
        jmp continue_80;
    there_80:
        x: int = id xdiff;
        jmp continue_80;
    continue_80:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_80 there_y_80;
    here_y_80:
        y: int = id y2diff;
        jmp continue_y_80;
    there_y_80:
        y: int = id ydiff;
        jmp continue_y_80;
    continue_y_80:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_80 next_80;
    set_80:
        min: int = id mdist;
        min_label: int = id l_80;
        jmp next_80;
    next_80:
        xdiff: int = sub x_81 x_t;
        x2diff: int = sub x_t x_81;
        ydiff: int = sub y_81 y_t;
        y2diff: int = sub y_t y_81;
        xcheck: bool = le xdiff zero;
        br xcheck here_81 there_81;
    here_81:
        x: int = id x2diff;
        jmp continue_81;
    there_81:
        x: int = id xdiff;
        jmp continue_81;
    continue_81:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_81 there_y_81;
    here_y_81:
        y: int = id y2diff;
        jmp continue_y_81;
    there_y_81:
        y: int = id ydiff;
        jmp continue_y_81;
    continue_y_81:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_81 next_81;
    set_81:
        min: int = id mdist;
        min_label: int = id l_81;
        jmp next_81;
    next_81:
        xdiff: int = sub x_82 x_t;
        x2diff: int = sub x_t x_82;
        ydiff: int = sub y_82 y_t;
        y2diff: int = sub y_t y_82;
        xcheck: bool = le xdiff zero;
        br xcheck here_82 there_82;
    here_82:
        x: int = id x2diff;
        jmp continue_82;
    there_82:
        x: int = id xdiff;
        jmp continue_82;
    continue_82:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_82 there_y_82;
    here_y_82:
        y: int = id y2diff;
        jmp continue_y_82;
    there_y_82:
        y: int = id ydiff;
        jmp continue_y_82;
    continue_y_82:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_82 next_82;
    set_82:
        min: int = id mdist;
        min_label: int = id l_82;
        jmp next_82;
    next_82:
        xdiff: int = sub x_83 x_t;
        x2diff: int = sub x_t x_83;
        ydiff: int = sub y_83 y_t;
        y2diff: int = sub y_t y_83;
        xcheck: bool = le xdiff zero;
        br xcheck here_83 there_83;
    here_83:
        x: int = id x2diff;
        jmp continue_83;
    there_83:
        x: int = id xdiff;
        jmp continue_83;
    continue_83:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_83 there_y_83;
    here_y_83:
        y: int = id y2diff;
        jmp continue_y_83;
    there_y_83:
        y: int = id ydiff;
        jmp continue_y_83;
    continue_y_83:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_83 next_83;
    set_83:
        min: int = id mdist;
        min_label: int = id l_83;
        jmp next_83;
    next_83:
        xdiff: int = sub x_84 x_t;
        x2diff: int = sub x_t x_84;
        ydiff: int = sub y_84 y_t;
        y2diff: int = sub y_t y_84;
        xcheck: bool = le xdiff zero;
        br xcheck here_84 there_84;
    here_84:
        x: int = id x2diff;
        jmp continue_84;
    there_84:
        x: int = id xdiff;
        jmp continue_84;
    continue_84:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_84 there_y_84;
    here_y_84:
        y: int = id y2diff;
        jmp continue_y_84;
    there_y_84:
        y: int = id ydiff;
        jmp continue_y_84;
    continue_y_84:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_84 next_84;
    set_84:
        min: int = id mdist;
        min_label: int = id l_84;
        jmp next_84;
    next_84:
        xdiff: int = sub x_85 x_t;
        x2diff: int = sub x_t x_85;
        ydiff: int = sub y_85 y_t;
        y2diff: int = sub y_t y_85;
        xcheck: bool = le xdiff zero;
        br xcheck here_85 there_85;
    here_85:
        x: int = id x2diff;
        jmp continue_85;
    there_85:
        x: int = id xdiff;
        jmp continue_85;
    continue_85:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_85 there_y_85;
    here_y_85:
        y: int = id y2diff;
        jmp continue_y_85;
    there_y_85:
        y: int = id ydiff;
        jmp continue_y_85;
    continue_y_85:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_85 next_85;
    set_85:
        min: int = id mdist;
        min_label: int = id l_85;
        jmp next_85;
    next_85:
        xdiff: int = sub x_86 x_t;
        x2diff: int = sub x_t x_86;
        ydiff: int = sub y_86 y_t;
        y2diff: int = sub y_t y_86;
        xcheck: bool = le xdiff zero;
        br xcheck here_86 there_86;
    here_86:
        x: int = id x2diff;
        jmp continue_86;
    there_86:
        x: int = id xdiff;
        jmp continue_86;
    continue_86:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_86 there_y_86;
    here_y_86:
        y: int = id y2diff;
        jmp continue_y_86;
    there_y_86:
        y: int = id ydiff;
        jmp continue_y_86;
    continue_y_86:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_86 next_86;
    set_86:
        min: int = id mdist;
        min_label: int = id l_86;
        jmp next_86;
    next_86:
        xdiff: int = sub x_87 x_t;
        x2diff: int = sub x_t x_87;
        ydiff: int = sub y_87 y_t;
        y2diff: int = sub y_t y_87;
        xcheck: bool = le xdiff zero;
        br xcheck here_87 there_87;
    here_87:
        x: int = id x2diff;
        jmp continue_87;
    there_87:
        x: int = id xdiff;
        jmp continue_87;
    continue_87:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_87 there_y_87;
    here_y_87:
        y: int = id y2diff;
        jmp continue_y_87;
    there_y_87:
        y: int = id ydiff;
        jmp continue_y_87;
    continue_y_87:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_87 next_87;
    set_87:
        min: int = id mdist;
        min_label: int = id l_87;
        jmp next_87;
    next_87:
        xdiff: int = sub x_88 x_t;
        x2diff: int = sub x_t x_88;
        ydiff: int = sub y_88 y_t;
        y2diff: int = sub y_t y_88;
        xcheck: bool = le xdiff zero;
        br xcheck here_88 there_88;
    here_88:
        x: int = id x2diff;
        jmp continue_88;
    there_88:
        x: int = id xdiff;
        jmp continue_88;
    continue_88:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_88 there_y_88;
    here_y_88:
        y: int = id y2diff;
        jmp continue_y_88;
    there_y_88:
        y: int = id ydiff;
        jmp continue_y_88;
    continue_y_88:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_88 next_88;
    set_88:
        min: int = id mdist;
        min_label: int = id l_88;
        jmp next_88;
    next_88:
        xdiff: int = sub x_89 x_t;
        x2diff: int = sub x_t x_89;
        ydiff: int = sub y_89 y_t;
        y2diff: int = sub y_t y_89;
        xcheck: bool = le xdiff zero;
        br xcheck here_89 there_89;
    here_89:
        x: int = id x2diff;
        jmp continue_89;
    there_89:
        x: int = id xdiff;
        jmp continue_89;
    continue_89:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_89 there_y_89;
    here_y_89:
        y: int = id y2diff;
        jmp continue_y_89;
    there_y_89:
        y: int = id ydiff;
        jmp continue_y_89;
    continue_y_89:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_89 next_89;
    set_89:
        min: int = id mdist;
        min_label: int = id l_89;
        jmp next_89;
    next_89:
        xdiff: int = sub x_90 x_t;
        x2diff: int = sub x_t x_90;
        ydiff: int = sub y_90 y_t;
        y2diff: int = sub y_t y_90;
        xcheck: bool = le xdiff zero;
        br xcheck here_90 there_90;
    here_90:
        x: int = id x2diff;
        jmp continue_90;
    there_90:
        x: int = id xdiff;
        jmp continue_90;
    continue_90:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_90 there_y_90;
    here_y_90:
        y: int = id y2diff;
        jmp continue_y_90;
    there_y_90:
        y: int = id ydiff;
        jmp continue_y_90;
    continue_y_90:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_90 next_90;
    set_90:
        min: int = id mdist;
        min_label: int = id l_90;
        jmp next_90;
    next_90:
        xdiff: int = sub x_91 x_t;
        x2diff: int = sub x_t x_91;
        ydiff: int = sub y_91 y_t;
        y2diff: int = sub y_t y_91;
        xcheck: bool = le xdiff zero;
        br xcheck here_91 there_91;
    here_91:
        x: int = id x2diff;
        jmp continue_91;
    there_91:
        x: int = id xdiff;
        jmp continue_91;
    continue_91:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_91 there_y_91;
    here_y_91:
        y: int = id y2diff;
        jmp continue_y_91;
    there_y_91:
        y: int = id ydiff;
        jmp continue_y_91;
    continue_y_91:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_91 next_91;
    set_91:
        min: int = id mdist;
        min_label: int = id l_91;
        jmp next_91;
    next_91:
        xdiff: int = sub x_92 x_t;
        x2diff: int = sub x_t x_92;
        ydiff: int = sub y_92 y_t;
        y2diff: int = sub y_t y_92;
        xcheck: bool = le xdiff zero;
        br xcheck here_92 there_92;
    here_92:
        x: int = id x2diff;
        jmp continue_92;
    there_92:
        x: int = id xdiff;
        jmp continue_92;
    continue_92:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_92 there_y_92;
    here_y_92:
        y: int = id y2diff;
        jmp continue_y_92;
    there_y_92:
        y: int = id ydiff;
        jmp continue_y_92;
    continue_y_92:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_92 next_92;
    set_92:
        min: int = id mdist;
        min_label: int = id l_92;
        jmp next_92;
    next_92:
        xdiff: int = sub x_93 x_t;
        x2diff: int = sub x_t x_93;
        ydiff: int = sub y_93 y_t;
        y2diff: int = sub y_t y_93;
        xcheck: bool = le xdiff zero;
        br xcheck here_93 there_93;
    here_93:
        x: int = id x2diff;
        jmp continue_93;
    there_93:
        x: int = id xdiff;
        jmp continue_93;
    continue_93:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_93 there_y_93;
    here_y_93:
        y: int = id y2diff;
        jmp continue_y_93;
    there_y_93:
        y: int = id ydiff;
        jmp continue_y_93;
    continue_y_93:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_93 next_93;
    set_93:
        min: int = id mdist;
        min_label: int = id l_93;
        jmp next_93;
    next_93:
        xdiff: int = sub x_94 x_t;
        x2diff: int = sub x_t x_94;
        ydiff: int = sub y_94 y_t;
        y2diff: int = sub y_t y_94;
        xcheck: bool = le xdiff zero;
        br xcheck here_94 there_94;
    here_94:
        x: int = id x2diff;
        jmp continue_94;
    there_94:
        x: int = id xdiff;
        jmp continue_94;
    continue_94:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_94 there_y_94;
    here_y_94:
        y: int = id y2diff;
        jmp continue_y_94;
    there_y_94:
        y: int = id ydiff;
        jmp continue_y_94;
    continue_y_94:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_94 next_94;
    set_94:
        min: int = id mdist;
        min_label: int = id l_94;
        jmp next_94;
    next_94:
        xdiff: int = sub x_95 x_t;
        x2diff: int = sub x_t x_95;
        ydiff: int = sub y_95 y_t;
        y2diff: int = sub y_t y_95;
        xcheck: bool = le xdiff zero;
        br xcheck here_95 there_95;
    here_95:
        x: int = id x2diff;
        jmp continue_95;
    there_95:
        x: int = id xdiff;
        jmp continue_95;
    continue_95:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_95 there_y_95;
    here_y_95:
        y: int = id y2diff;
        jmp continue_y_95;
    there_y_95:
        y: int = id ydiff;
        jmp continue_y_95;
    continue_y_95:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_95 next_95;
    set_95:
        min: int = id mdist;
        min_label: int = id l_95;
        jmp next_95;
    next_95:
        xdiff: int = sub x_96 x_t;
        x2diff: int = sub x_t x_96;
        ydiff: int = sub y_96 y_t;
        y2diff: int = sub y_t y_96;
        xcheck: bool = le xdiff zero;
        br xcheck here_96 there_96;
    here_96:
        x: int = id x2diff;
        jmp continue_96;
    there_96:
        x: int = id xdiff;
        jmp continue_96;
    continue_96:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_96 there_y_96;
    here_y_96:
        y: int = id y2diff;
        jmp continue_y_96;
    there_y_96:
        y: int = id ydiff;
        jmp continue_y_96;
    continue_y_96:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_96 next_96;
    set_96:
        min: int = id mdist;
        min_label: int = id l_96;
        jmp next_96;
    next_96:
        xdiff: int = sub x_97 x_t;
        x2diff: int = sub x_t x_97;
        ydiff: int = sub y_97 y_t;
        y2diff: int = sub y_t y_97;
        xcheck: bool = le xdiff zero;
        br xcheck here_97 there_97;
    here_97:
        x: int = id x2diff;
        jmp continue_97;
    there_97:
        x: int = id xdiff;
        jmp continue_97;
    continue_97:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_97 there_y_97;
    here_y_97:
        y: int = id y2diff;
        jmp continue_y_97;
    there_y_97:
        y: int = id ydiff;
        jmp continue_y_97;
    continue_y_97:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_97 next_97;
    set_97:
        min: int = id mdist;
        min_label: int = id l_97;
        jmp next_97;
    next_97:
        xdiff: int = sub x_98 x_t;
        x2diff: int = sub x_t x_98;
        ydiff: int = sub y_98 y_t;
        y2diff: int = sub y_t y_98;
        xcheck: bool = le xdiff zero;
        br xcheck here_98 there_98;
    here_98:
        x: int = id x2diff;
        jmp continue_98;
    there_98:
        x: int = id xdiff;
        jmp continue_98;
    continue_98:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_98 there_y_98;
    here_y_98:
        y: int = id y2diff;
        jmp continue_y_98;
    there_y_98:
        y: int = id ydiff;
        jmp continue_y_98;
    continue_y_98:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_98 next_98;
    set_98:
        min: int = id mdist;
        min_label: int = id l_98;
        jmp next_98;
    next_98:
        xdiff: int = sub x_99 x_t;
        x2diff: int = sub x_t x_99;
        ydiff: int = sub y_99 y_t;
        y2diff: int = sub y_t y_99;
        xcheck: bool = le xdiff zero;
        br xcheck here_99 there_99;
    here_99:
        x: int = id x2diff;
        jmp continue_99;
    there_99:
        x: int = id xdiff;
        jmp continue_99;
    continue_99:
        ycheck: bool = le ydiff zero;
        br ycheck here_y_99 there_y_99;
    here_y_99:
        y: int = id y2diff;
        jmp continue_y_99;
    there_y_99:
        y: int = id ydiff;
        jmp continue_y_99;
    continue_y_99:
        mdist: int = add x y;
        check_min: bool = le mdist min;
        br check_min set_99 next_99;
    set_99:
        min: int = id mdist;
        min_label: int = id l_99;
        jmp next_99;
    next_99:
    ret min_label;
}


check (pred: int) (l: int) : int {
    one: int = const 1;
    zero: int = const 0;
    equal: bool = eq pred l;
    br equal yes no;
    yes:
        ret one;
    no:
        ret zero;
}


main {
    correct: int = const 0;
    total: int = const 100;
    one: int = const 1;
    x_t_0: int = const 47;
    y_t_0: int = const 52;
    l_t_0: int = const 0;
    x_t_1: int = const 29;
    y_t_1: int = const 66;
    l_t_1: int = const 0;
    x_t_2: int = const 29;
    y_t_2: int = const 54;
    l_t_2: int = const 1;
    x_t_3: int = const 75;
    y_t_3: int = const 98;
    l_t_3: int = const 1;
    x_t_4: int = const 15;
    y_t_4: int = const 56;
    l_t_4: int = const 0;
    x_t_5: int = const 96;
    y_t_5: int = const 56;
    l_t_5: int = const 0;
    x_t_6: int = const 86;
    y_t_6: int = const 40;
    l_t_6: int = const 1;
    x_t_7: int = const 84;
    y_t_7: int = const 5;
    l_t_7: int = const 1;
    x_t_8: int = const 11;
    y_t_8: int = const 73;
    l_t_8: int = const 0;
    x_t_9: int = const 71;
    y_t_9: int = const 61;
    l_t_9: int = const 1;
    x_t_10: int = const 27;
    y_t_10: int = const 34;
    l_t_10: int = const 1;
    x_t_11: int = const 82;
    y_t_11: int = const 95;
    l_t_11: int = const 0;
    x_t_12: int = const 97;
    y_t_12: int = const 29;
    l_t_12: int = const 0;
    x_t_13: int = const 58;
    y_t_13: int = const 33;
    l_t_13: int = const 1;
    x_t_14: int = const 86;
    y_t_14: int = const 75;
    l_t_14: int = const 1;
    x_t_15: int = const 34;
    y_t_15: int = const 89;
    l_t_15: int = const 1;
    x_t_16: int = const 25;
    y_t_16: int = const 8;
    l_t_16: int = const 0;
    x_t_17: int = const 46;
    y_t_17: int = const 32;
    l_t_17: int = const 0;
    x_t_18: int = const 98;
    y_t_18: int = const 95;
    l_t_18: int = const 0;
    x_t_19: int = const 61;
    y_t_19: int = const 73;
    l_t_19: int = const 0;
    x_t_20: int = const 81;
    y_t_20: int = const 61;
    l_t_20: int = const 1;
    x_t_21: int = const 90;
    y_t_21: int = const 67;
    l_t_21: int = const 0;
    x_t_22: int = const 26;
    y_t_22: int = const 19;
    l_t_22: int = const 0;
    x_t_23: int = const 1;
    y_t_23: int = const 96;
    l_t_23: int = const 0;
    x_t_24: int = const 21;
    y_t_24: int = const 58;
    l_t_24: int = const 0;
    x_t_25: int = const 90;
    y_t_25: int = const 26;
    l_t_25: int = const 0;
    x_t_26: int = const 62;
    y_t_26: int = const 38;
    l_t_26: int = const 0;
    x_t_27: int = const 77;
    y_t_27: int = const 86;
    l_t_27: int = const 1;
    x_t_28: int = const 66;
    y_t_28: int = const 84;
    l_t_28: int = const 0;
    x_t_29: int = const 92;
    y_t_29: int = const 40;
    l_t_29: int = const 0;
    x_t_30: int = const 96;
    y_t_30: int = const 59;
    l_t_30: int = const 1;
    x_t_31: int = const 34;
    y_t_31: int = const 6;
    l_t_31: int = const 1;
    x_t_32: int = const 67;
    y_t_32: int = const 97;
    l_t_32: int = const 0;
    x_t_33: int = const 100;
    y_t_33: int = const 55;
    l_t_33: int = const 0;
    x_t_34: int = const 40;
    y_t_34: int = const 61;
    l_t_34: int = const 0;
    x_t_35: int = const 56;
    y_t_35: int = const 99;
    l_t_35: int = const 1;
    x_t_36: int = const 97;
    y_t_36: int = const 70;
    l_t_36: int = const 1;
    x_t_37: int = const 83;
    y_t_37: int = const 52;
    l_t_37: int = const 1;
    x_t_38: int = const 32;
    y_t_38: int = const 84;
    l_t_38: int = const 0;
    x_t_39: int = const 10;
    y_t_39: int = const 24;
    l_t_39: int = const 0;
    x_t_40: int = const 79;
    y_t_40: int = const 53;
    l_t_40: int = const 1;
    x_t_41: int = const 23;
    y_t_41: int = const 37;
    l_t_41: int = const 0;
    x_t_42: int = const 84;
    y_t_42: int = const 58;
    l_t_42: int = const 1;
    x_t_43: int = const 33;
    y_t_43: int = const 68;
    l_t_43: int = const 1;
    x_t_44: int = const 9;
    y_t_44: int = const 55;
    l_t_44: int = const 0;
    x_t_45: int = const 83;
    y_t_45: int = const 24;
    l_t_45: int = const 0;
    x_t_46: int = const 63;
    y_t_46: int = const 64;
    l_t_46: int = const 0;
    x_t_47: int = const 80;
    y_t_47: int = const 21;
    l_t_47: int = const 1;
    x_t_48: int = const 62;
    y_t_48: int = const 52;
    l_t_48: int = const 0;
    x_t_49: int = const 64;
    y_t_49: int = const 81;
    l_t_49: int = const 1;
    x_t_50: int = const 77;
    y_t_50: int = const 40;
    l_t_50: int = const 1;
    x_t_51: int = const 29;
    y_t_51: int = const 6;
    l_t_51: int = const 0;
    x_t_52: int = const 64;
    y_t_52: int = const 4;
    l_t_52: int = const 0;
    x_t_53: int = const 10;
    y_t_53: int = const 18;
    l_t_53: int = const 0;
    x_t_54: int = const 38;
    y_t_54: int = const 5;
    l_t_54: int = const 1;
    x_t_55: int = const 59;
    y_t_55: int = const 38;
    l_t_55: int = const 1;
    x_t_56: int = const 15;
    y_t_56: int = const 42;
    l_t_56: int = const 0;
    x_t_57: int = const 14;
    y_t_57: int = const 90;
    l_t_57: int = const 1;
    x_t_58: int = const 32;
    y_t_58: int = const 2;
    l_t_58: int = const 0;
    x_t_59: int = const 52;
    y_t_59: int = const 99;
    l_t_59: int = const 0;
    x_t_60: int = const 24;
    y_t_60: int = const 82;
    l_t_60: int = const 1;
    x_t_61: int = const 41;
    y_t_61: int = const 55;
    l_t_61: int = const 1;
    x_t_62: int = const 17;
    y_t_62: int = const 77;
    l_t_62: int = const 1;
    x_t_63: int = const 33;
    y_t_63: int = const 88;
    l_t_63: int = const 1;
    x_t_64: int = const 48;
    y_t_64: int = const 28;
    l_t_64: int = const 1;
    x_t_65: int = const 40;
    y_t_65: int = const 41;
    l_t_65: int = const 0;
    x_t_66: int = const 46;
    y_t_66: int = const 60;
    l_t_66: int = const 0;
    x_t_67: int = const 21;
    y_t_67: int = const 24;
    l_t_67: int = const 1;
    x_t_68: int = const 76;
    y_t_68: int = const 11;
    l_t_68: int = const 1;
    x_t_69: int = const 47;
    y_t_69: int = const 47;
    l_t_69: int = const 0;
    x_t_70: int = const 89;
    y_t_70: int = const 87;
    l_t_70: int = const 0;
    x_t_71: int = const 81;
    y_t_71: int = const 70;
    l_t_71: int = const 0;
    x_t_72: int = const 62;
    y_t_72: int = const 36;
    l_t_72: int = const 1;
    x_t_73: int = const 82;
    y_t_73: int = const 33;
    l_t_73: int = const 1;
    x_t_74: int = const 53;
    y_t_74: int = const 48;
    l_t_74: int = const 0;
    x_t_75: int = const 91;
    y_t_75: int = const 52;
    l_t_75: int = const 1;
    x_t_76: int = const 62;
    y_t_76: int = const 82;
    l_t_76: int = const 1;
    x_t_77: int = const 82;
    y_t_77: int = const 21;
    l_t_77: int = const 1;
    x_t_78: int = const 55;
    y_t_78: int = const 44;
    l_t_78: int = const 0;
    x_t_79: int = const 42;
    y_t_79: int = const 57;
    l_t_79: int = const 1;
    x_t_80: int = const 1;
    y_t_80: int = const 82;
    l_t_80: int = const 0;
    x_t_81: int = const 10;
    y_t_81: int = const 55;
    l_t_81: int = const 1;
    x_t_82: int = const 39;
    y_t_82: int = const 61;
    l_t_82: int = const 1;
    x_t_83: int = const 60;
    y_t_83: int = const 34;
    l_t_83: int = const 0;
    x_t_84: int = const 11;
    y_t_84: int = const 26;
    l_t_84: int = const 1;
    x_t_85: int = const 92;
    y_t_85: int = const 48;
    l_t_85: int = const 0;
    x_t_86: int = const 6;
    y_t_86: int = const 23;
    l_t_86: int = const 1;
    x_t_87: int = const 47;
    y_t_87: int = const 79;
    l_t_87: int = const 1;
    x_t_88: int = const 6;
    y_t_88: int = const 27;
    l_t_88: int = const 0;
    x_t_89: int = const 3;
    y_t_89: int = const 65;
    l_t_89: int = const 1;
    x_t_90: int = const 44;
    y_t_90: int = const 52;
    l_t_90: int = const 0;
    x_t_91: int = const 9;
    y_t_91: int = const 11;
    l_t_91: int = const 1;
    x_t_92: int = const 81;
    y_t_92: int = const 55;
    l_t_92: int = const 0;
    x_t_93: int = const 46;
    y_t_93: int = const 30;
    l_t_93: int = const 1;
    x_t_94: int = const 33;
    y_t_94: int = const 63;
    l_t_94: int = const 0;
    x_t_95: int = const 24;
    y_t_95: int = const 72;
    l_t_95: int = const 1;
    x_t_96: int = const 48;
    y_t_96: int = const 65;
    l_t_96: int = const 0;
    x_t_97: int = const 23;
    y_t_97: int = const 11;
    l_t_97: int = const 1;
    x_t_98: int = const 8;
    y_t_98: int = const 85;
    l_t_98: int = const 0;
    x_t_99: int = const 25;
    y_t_99: int = const 56;
    l_t_99: int = const 1;
    pred_t_0: int = call manhattan x_t_0 y_t_0;
    correct_or_not: int = call check pred_t_0 l_t_0;
    correct: int = add correct correct_or_not;
    pred_t_1: int = call manhattan x_t_1 y_t_1;
    correct_or_not: int = call check pred_t_1 l_t_1;
    correct: int = add correct correct_or_not;
    pred_t_2: int = call manhattan x_t_2 y_t_2;
    correct_or_not: int = call check pred_t_2 l_t_2;
    correct: int = add correct correct_or_not;
    pred_t_3: int = call manhattan x_t_3 y_t_3;
    correct_or_not: int = call check pred_t_3 l_t_3;
    correct: int = add correct correct_or_not;
    pred_t_4: int = call manhattan x_t_4 y_t_4;
    correct_or_not: int = call check pred_t_4 l_t_4;
    correct: int = add correct correct_or_not;
    pred_t_5: int = call manhattan x_t_5 y_t_5;
    correct_or_not: int = call check pred_t_5 l_t_5;
    correct: int = add correct correct_or_not;
    pred_t_6: int = call manhattan x_t_6 y_t_6;
    correct_or_not: int = call check pred_t_6 l_t_6;
    correct: int = add correct correct_or_not;
    pred_t_7: int = call manhattan x_t_7 y_t_7;
    correct_or_not: int = call check pred_t_7 l_t_7;
    correct: int = add correct correct_or_not;
    pred_t_8: int = call manhattan x_t_8 y_t_8;
    correct_or_not: int = call check pred_t_8 l_t_8;
    correct: int = add correct correct_or_not;
    pred_t_9: int = call manhattan x_t_9 y_t_9;
    correct_or_not: int = call check pred_t_9 l_t_9;
    correct: int = add correct correct_or_not;
    pred_t_10: int = call manhattan x_t_10 y_t_10;
    correct_or_not: int = call check pred_t_10 l_t_10;
    correct: int = add correct correct_or_not;
    pred_t_11: int = call manhattan x_t_11 y_t_11;
    correct_or_not: int = call check pred_t_11 l_t_11;
    correct: int = add correct correct_or_not;
    pred_t_12: int = call manhattan x_t_12 y_t_12;
    correct_or_not: int = call check pred_t_12 l_t_12;
    correct: int = add correct correct_or_not;
    pred_t_13: int = call manhattan x_t_13 y_t_13;
    correct_or_not: int = call check pred_t_13 l_t_13;
    correct: int = add correct correct_or_not;
    pred_t_14: int = call manhattan x_t_14 y_t_14;
    correct_or_not: int = call check pred_t_14 l_t_14;
    correct: int = add correct correct_or_not;
    pred_t_15: int = call manhattan x_t_15 y_t_15;
    correct_or_not: int = call check pred_t_15 l_t_15;
    correct: int = add correct correct_or_not;
    pred_t_16: int = call manhattan x_t_16 y_t_16;
    correct_or_not: int = call check pred_t_16 l_t_16;
    correct: int = add correct correct_or_not;
    pred_t_17: int = call manhattan x_t_17 y_t_17;
    correct_or_not: int = call check pred_t_17 l_t_17;
    correct: int = add correct correct_or_not;
    pred_t_18: int = call manhattan x_t_18 y_t_18;
    correct_or_not: int = call check pred_t_18 l_t_18;
    correct: int = add correct correct_or_not;
    pred_t_19: int = call manhattan x_t_19 y_t_19;
    correct_or_not: int = call check pred_t_19 l_t_19;
    correct: int = add correct correct_or_not;
    pred_t_20: int = call manhattan x_t_20 y_t_20;
    correct_or_not: int = call check pred_t_20 l_t_20;
    correct: int = add correct correct_or_not;
    pred_t_21: int = call manhattan x_t_21 y_t_21;
    correct_or_not: int = call check pred_t_21 l_t_21;
    correct: int = add correct correct_or_not;
    pred_t_22: int = call manhattan x_t_22 y_t_22;
    correct_or_not: int = call check pred_t_22 l_t_22;
    correct: int = add correct correct_or_not;
    pred_t_23: int = call manhattan x_t_23 y_t_23;
    correct_or_not: int = call check pred_t_23 l_t_23;
    correct: int = add correct correct_or_not;
    pred_t_24: int = call manhattan x_t_24 y_t_24;
    correct_or_not: int = call check pred_t_24 l_t_24;
    correct: int = add correct correct_or_not;
    pred_t_25: int = call manhattan x_t_25 y_t_25;
    correct_or_not: int = call check pred_t_25 l_t_25;
    correct: int = add correct correct_or_not;
    pred_t_26: int = call manhattan x_t_26 y_t_26;
    correct_or_not: int = call check pred_t_26 l_t_26;
    correct: int = add correct correct_or_not;
    pred_t_27: int = call manhattan x_t_27 y_t_27;
    correct_or_not: int = call check pred_t_27 l_t_27;
    correct: int = add correct correct_or_not;
    pred_t_28: int = call manhattan x_t_28 y_t_28;
    correct_or_not: int = call check pred_t_28 l_t_28;
    correct: int = add correct correct_or_not;
    pred_t_29: int = call manhattan x_t_29 y_t_29;
    correct_or_not: int = call check pred_t_29 l_t_29;
    correct: int = add correct correct_or_not;
    pred_t_30: int = call manhattan x_t_30 y_t_30;
    correct_or_not: int = call check pred_t_30 l_t_30;
    correct: int = add correct correct_or_not;
    pred_t_31: int = call manhattan x_t_31 y_t_31;
    correct_or_not: int = call check pred_t_31 l_t_31;
    correct: int = add correct correct_or_not;
    pred_t_32: int = call manhattan x_t_32 y_t_32;
    correct_or_not: int = call check pred_t_32 l_t_32;
    correct: int = add correct correct_or_not;
    pred_t_33: int = call manhattan x_t_33 y_t_33;
    correct_or_not: int = call check pred_t_33 l_t_33;
    correct: int = add correct correct_or_not;
    pred_t_34: int = call manhattan x_t_34 y_t_34;
    correct_or_not: int = call check pred_t_34 l_t_34;
    correct: int = add correct correct_or_not;
    pred_t_35: int = call manhattan x_t_35 y_t_35;
    correct_or_not: int = call check pred_t_35 l_t_35;
    correct: int = add correct correct_or_not;
    pred_t_36: int = call manhattan x_t_36 y_t_36;
    correct_or_not: int = call check pred_t_36 l_t_36;
    correct: int = add correct correct_or_not;
    pred_t_37: int = call manhattan x_t_37 y_t_37;
    correct_or_not: int = call check pred_t_37 l_t_37;
    correct: int = add correct correct_or_not;
    pred_t_38: int = call manhattan x_t_38 y_t_38;
    correct_or_not: int = call check pred_t_38 l_t_38;
    correct: int = add correct correct_or_not;
    pred_t_39: int = call manhattan x_t_39 y_t_39;
    correct_or_not: int = call check pred_t_39 l_t_39;
    correct: int = add correct correct_or_not;
    pred_t_40: int = call manhattan x_t_40 y_t_40;
    correct_or_not: int = call check pred_t_40 l_t_40;
    correct: int = add correct correct_or_not;
    pred_t_41: int = call manhattan x_t_41 y_t_41;
    correct_or_not: int = call check pred_t_41 l_t_41;
    correct: int = add correct correct_or_not;
    pred_t_42: int = call manhattan x_t_42 y_t_42;
    correct_or_not: int = call check pred_t_42 l_t_42;
    correct: int = add correct correct_or_not;
    pred_t_43: int = call manhattan x_t_43 y_t_43;
    correct_or_not: int = call check pred_t_43 l_t_43;
    correct: int = add correct correct_or_not;
    pred_t_44: int = call manhattan x_t_44 y_t_44;
    correct_or_not: int = call check pred_t_44 l_t_44;
    correct: int = add correct correct_or_not;
    pred_t_45: int = call manhattan x_t_45 y_t_45;
    correct_or_not: int = call check pred_t_45 l_t_45;
    correct: int = add correct correct_or_not;
    pred_t_46: int = call manhattan x_t_46 y_t_46;
    correct_or_not: int = call check pred_t_46 l_t_46;
    correct: int = add correct correct_or_not;
    pred_t_47: int = call manhattan x_t_47 y_t_47;
    correct_or_not: int = call check pred_t_47 l_t_47;
    correct: int = add correct correct_or_not;
    pred_t_48: int = call manhattan x_t_48 y_t_48;
    correct_or_not: int = call check pred_t_48 l_t_48;
    correct: int = add correct correct_or_not;
    pred_t_49: int = call manhattan x_t_49 y_t_49;
    correct_or_not: int = call check pred_t_49 l_t_49;
    correct: int = add correct correct_or_not;
    pred_t_50: int = call manhattan x_t_50 y_t_50;
    correct_or_not: int = call check pred_t_50 l_t_50;
    correct: int = add correct correct_or_not;
    pred_t_51: int = call manhattan x_t_51 y_t_51;
    correct_or_not: int = call check pred_t_51 l_t_51;
    correct: int = add correct correct_or_not;
    pred_t_52: int = call manhattan x_t_52 y_t_52;
    correct_or_not: int = call check pred_t_52 l_t_52;
    correct: int = add correct correct_or_not;
    pred_t_53: int = call manhattan x_t_53 y_t_53;
    correct_or_not: int = call check pred_t_53 l_t_53;
    correct: int = add correct correct_or_not;
    pred_t_54: int = call manhattan x_t_54 y_t_54;
    correct_or_not: int = call check pred_t_54 l_t_54;
    correct: int = add correct correct_or_not;
    pred_t_55: int = call manhattan x_t_55 y_t_55;
    correct_or_not: int = call check pred_t_55 l_t_55;
    correct: int = add correct correct_or_not;
    pred_t_56: int = call manhattan x_t_56 y_t_56;
    correct_or_not: int = call check pred_t_56 l_t_56;
    correct: int = add correct correct_or_not;
    pred_t_57: int = call manhattan x_t_57 y_t_57;
    correct_or_not: int = call check pred_t_57 l_t_57;
    correct: int = add correct correct_or_not;
    pred_t_58: int = call manhattan x_t_58 y_t_58;
    correct_or_not: int = call check pred_t_58 l_t_58;
    correct: int = add correct correct_or_not;
    pred_t_59: int = call manhattan x_t_59 y_t_59;
    correct_or_not: int = call check pred_t_59 l_t_59;
    correct: int = add correct correct_or_not;
    pred_t_60: int = call manhattan x_t_60 y_t_60;
    correct_or_not: int = call check pred_t_60 l_t_60;
    correct: int = add correct correct_or_not;
    pred_t_61: int = call manhattan x_t_61 y_t_61;
    correct_or_not: int = call check pred_t_61 l_t_61;
    correct: int = add correct correct_or_not;
    pred_t_62: int = call manhattan x_t_62 y_t_62;
    correct_or_not: int = call check pred_t_62 l_t_62;
    correct: int = add correct correct_or_not;
    pred_t_63: int = call manhattan x_t_63 y_t_63;
    correct_or_not: int = call check pred_t_63 l_t_63;
    correct: int = add correct correct_or_not;
    pred_t_64: int = call manhattan x_t_64 y_t_64;
    correct_or_not: int = call check pred_t_64 l_t_64;
    correct: int = add correct correct_or_not;
    pred_t_65: int = call manhattan x_t_65 y_t_65;
    correct_or_not: int = call check pred_t_65 l_t_65;
    correct: int = add correct correct_or_not;
    pred_t_66: int = call manhattan x_t_66 y_t_66;
    correct_or_not: int = call check pred_t_66 l_t_66;
    correct: int = add correct correct_or_not;
    pred_t_67: int = call manhattan x_t_67 y_t_67;
    correct_or_not: int = call check pred_t_67 l_t_67;
    correct: int = add correct correct_or_not;
    pred_t_68: int = call manhattan x_t_68 y_t_68;
    correct_or_not: int = call check pred_t_68 l_t_68;
    correct: int = add correct correct_or_not;
    pred_t_69: int = call manhattan x_t_69 y_t_69;
    correct_or_not: int = call check pred_t_69 l_t_69;
    correct: int = add correct correct_or_not;
    pred_t_70: int = call manhattan x_t_70 y_t_70;
    correct_or_not: int = call check pred_t_70 l_t_70;
    correct: int = add correct correct_or_not;
    pred_t_71: int = call manhattan x_t_71 y_t_71;
    correct_or_not: int = call check pred_t_71 l_t_71;
    correct: int = add correct correct_or_not;
    pred_t_72: int = call manhattan x_t_72 y_t_72;
    correct_or_not: int = call check pred_t_72 l_t_72;
    correct: int = add correct correct_or_not;
    pred_t_73: int = call manhattan x_t_73 y_t_73;
    correct_or_not: int = call check pred_t_73 l_t_73;
    correct: int = add correct correct_or_not;
    pred_t_74: int = call manhattan x_t_74 y_t_74;
    correct_or_not: int = call check pred_t_74 l_t_74;
    correct: int = add correct correct_or_not;
    pred_t_75: int = call manhattan x_t_75 y_t_75;
    correct_or_not: int = call check pred_t_75 l_t_75;
    correct: int = add correct correct_or_not;
    pred_t_76: int = call manhattan x_t_76 y_t_76;
    correct_or_not: int = call check pred_t_76 l_t_76;
    correct: int = add correct correct_or_not;
    pred_t_77: int = call manhattan x_t_77 y_t_77;
    correct_or_not: int = call check pred_t_77 l_t_77;
    correct: int = add correct correct_or_not;
    pred_t_78: int = call manhattan x_t_78 y_t_78;
    correct_or_not: int = call check pred_t_78 l_t_78;
    correct: int = add correct correct_or_not;
    pred_t_79: int = call manhattan x_t_79 y_t_79;
    correct_or_not: int = call check pred_t_79 l_t_79;
    correct: int = add correct correct_or_not;
    pred_t_80: int = call manhattan x_t_80 y_t_80;
    correct_or_not: int = call check pred_t_80 l_t_80;
    correct: int = add correct correct_or_not;
    pred_t_81: int = call manhattan x_t_81 y_t_81;
    correct_or_not: int = call check pred_t_81 l_t_81;
    correct: int = add correct correct_or_not;
    pred_t_82: int = call manhattan x_t_82 y_t_82;
    correct_or_not: int = call check pred_t_82 l_t_82;
    correct: int = add correct correct_or_not;
    pred_t_83: int = call manhattan x_t_83 y_t_83;
    correct_or_not: int = call check pred_t_83 l_t_83;
    correct: int = add correct correct_or_not;
    pred_t_84: int = call manhattan x_t_84 y_t_84;
    correct_or_not: int = call check pred_t_84 l_t_84;
    correct: int = add correct correct_or_not;
    pred_t_85: int = call manhattan x_t_85 y_t_85;
    correct_or_not: int = call check pred_t_85 l_t_85;
    correct: int = add correct correct_or_not;
    pred_t_86: int = call manhattan x_t_86 y_t_86;
    correct_or_not: int = call check pred_t_86 l_t_86;
    correct: int = add correct correct_or_not;
    pred_t_87: int = call manhattan x_t_87 y_t_87;
    correct_or_not: int = call check pred_t_87 l_t_87;
    correct: int = add correct correct_or_not;
    pred_t_88: int = call manhattan x_t_88 y_t_88;
    correct_or_not: int = call check pred_t_88 l_t_88;
    correct: int = add correct correct_or_not;
    pred_t_89: int = call manhattan x_t_89 y_t_89;
    correct_or_not: int = call check pred_t_89 l_t_89;
    correct: int = add correct correct_or_not;
    pred_t_90: int = call manhattan x_t_90 y_t_90;
    correct_or_not: int = call check pred_t_90 l_t_90;
    correct: int = add correct correct_or_not;
    pred_t_91: int = call manhattan x_t_91 y_t_91;
    correct_or_not: int = call check pred_t_91 l_t_91;
    correct: int = add correct correct_or_not;
    pred_t_92: int = call manhattan x_t_92 y_t_92;
    correct_or_not: int = call check pred_t_92 l_t_92;
    correct: int = add correct correct_or_not;
    pred_t_93: int = call manhattan x_t_93 y_t_93;
    correct_or_not: int = call check pred_t_93 l_t_93;
    correct: int = add correct correct_or_not;
    pred_t_94: int = call manhattan x_t_94 y_t_94;
    correct_or_not: int = call check pred_t_94 l_t_94;
    correct: int = add correct correct_or_not;
    pred_t_95: int = call manhattan x_t_95 y_t_95;
    correct_or_not: int = call check pred_t_95 l_t_95;
    correct: int = add correct correct_or_not;
    pred_t_96: int = call manhattan x_t_96 y_t_96;
    correct_or_not: int = call check pred_t_96 l_t_96;
    correct: int = add correct correct_or_not;
    pred_t_97: int = call manhattan x_t_97 y_t_97;
    correct_or_not: int = call check pred_t_97 l_t_97;
    correct: int = add correct correct_or_not;
    pred_t_98: int = call manhattan x_t_98 y_t_98;
    correct_or_not: int = call check pred_t_98 l_t_98;
    correct: int = add correct correct_or_not;
    pred_t_99: int = call manhattan x_t_99 y_t_99;
    correct_or_not: int = call check pred_t_99 l_t_99;
    correct: int = add correct correct_or_not;
    print correct;
    print total;
}
